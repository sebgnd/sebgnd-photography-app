{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\Parallax\\\\Parallax.tsx\";\nimport React, { Component } from 'react';\nimport { ParallaxContainer } from './parallax.style';\nimport ParallaxContent from './ParallaxContent';\n\nclass Parallax extends Component {\n  constructor(props) {\n    super(props);\n    this.parallaxElemRef = void 0;\n    this.throttleTime = void 0;\n    this.topOffset = void 0;\n    this.topOffset = 0;\n    this.parallaxElemRef = React.createRef();\n    this.throttleTime = 5;\n    this.handleResize = this.handleResize.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      backgroundPositionY: \"\"\n    };\n  }\n\n  isElementVisible() {\n    if (this.parallaxElemRef && this.parallaxElemRef.current) {\n      const position = this.parallaxElemRef.current.getBoundingClientRect();\n\n      if (position.top < window.innerHeight && position.bottom >= 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  updatePosition() {\n    if (!this.isElementVisible()) {\n      return;\n    }\n\n    const bottomPageOffset = window.scrollY + window.innerHeight;\n    const offset = bottomPageOffset - this.parallaxElemRef.current.offsetTop;\n    const newTop = this.topOffset - offset * this.props.speed;\n    this.setState({\n      backgroundPositionY: `${newTop}px`\n    });\n  }\n\n  getTopOffset() {\n    return window.innerHeight * this.props.speed;\n  }\n\n  handleScroll() {\n    this.updatePosition();\n  }\n\n  handleResize() {\n    this.topOffset = this.getTopOffset();\n    this.updatePosition();\n  }\n\n  addEventListener() {\n    window.addEventListener('scroll', this.handleScroll);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  removeEventListener() {\n    window.removeEventListener('scroll', this.handleScroll);\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  componentDidMount() {\n    this.topOffset = this.getTopOffset();\n    this.addEventListener();\n  }\n\n  componentWillUnmount() {\n    this.removeEventListener();\n  }\n\n  render() {\n    const {\n      img\n    } = this.props;\n    return React.createElement(ParallaxContainer, {\n      ref: this.parallaxElemRef,\n      style: { ...this.state\n      },\n      backgroundImage: img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ParallaxContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nexport default Parallax;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/Parallax/Parallax.tsx"],"names":["React","Component","ParallaxContainer","ParallaxContent","Parallax","constructor","props","parallaxElemRef","throttleTime","topOffset","createRef","handleResize","bind","handleScroll","state","backgroundPositionY","isElementVisible","current","position","getBoundingClientRect","top","window","innerHeight","bottom","updatePosition","bottomPageOffset","scrollY","offset","offsetTop","newTop","speed","setState","getTopOffset","addEventListener","removeEventListener","componentDidMount","componentWillUnmount","render","img","children"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useRef, useState, RefObject } from 'react';\r\nimport { ParallaxContainer, Relative } from './parallax.style';\r\nimport { throttle } from 'lodash';\r\n\r\nimport ParallaxContent from './ParallaxContent';\r\n\r\ninterface ParallaxProp {\r\n    img: string;\r\n    speed: number;\r\n}\r\n\r\ninterface ParallaxState {\r\n    backgroundPositionY: string;\r\n    backgroundSize: string;\r\n}\r\n\r\nclass Parallax extends Component<ParallaxProp, ParallaxState> {\r\n    private parallaxElemRef: RefObject<HTMLDivElement>;\r\n    private throttleTime: number;\r\n    private topOffset: number;\r\n\r\n    constructor(props: ParallaxProp) {\r\n        super(props);\r\n\r\n        this.topOffset = 0;\r\n        this.parallaxElemRef = React.createRef();\r\n        this.throttleTime = 5;\r\n\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n\r\n        this.state = {\r\n            backgroundPositionY: \"\"\r\n        }\r\n    }\r\n\r\n    isElementVisible() {\r\n        if (this.parallaxElemRef && this.parallaxElemRef.current) {\r\n            const position: DOMRect = this.parallaxElemRef.current.getBoundingClientRect();\r\n            if (position.top < window.innerHeight && position.bottom >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updatePosition() {\r\n        if (!this.isElementVisible()) {\r\n            return;\r\n        }\r\n        const bottomPageOffset = window.scrollY + window.innerHeight;\r\n        const offset = bottomPageOffset - this.parallaxElemRef.current!.offsetTop;\r\n        const newTop = this.topOffset - offset * this.props.speed;\r\n        this.setState({ backgroundPositionY: `${newTop}px` });\r\n    }\r\n\r\n    getTopOffset() {\r\n        return window.innerHeight * this.props.speed;\r\n    }\r\n\r\n    handleScroll() {\r\n        this.updatePosition();\r\n    }\r\n\r\n    handleResize() {\r\n        this.topOffset = this.getTopOffset();\r\n        this.updatePosition();\r\n    }\r\n\r\n    addEventListener() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    removeEventListener() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.topOffset = this.getTopOffset();\r\n        this.addEventListener();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeEventListener();\r\n    }\r\n\r\n    render() {\r\n        const { img } = this.props;\r\n        return (\r\n            <ParallaxContainer ref={this.parallaxElemRef} style={{...this.state}} backgroundImage={img}>\r\n                <ParallaxContent>\r\n                    {this.props.children}\r\n                </ParallaxContent>\r\n            </ParallaxContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Parallax;"]},"metadata":{},"sourceType":"module"}