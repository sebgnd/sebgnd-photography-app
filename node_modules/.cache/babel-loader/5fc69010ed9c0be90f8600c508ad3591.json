{"ast":null,"code":"import HttpRequest from '../http/HttpRequest';\nimport Image from './Image';\nexport default class ImageService {\n  async getImagesFromCategory(id) {\n    try {\n      const data = await HttpRequest.getData(`http://localhost:8000/images/category/${id}`);\n      return data.map(image => Image.format(image));\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async getKImagesFromOffset(k, offset) {\n    try {\n      const data = await HttpRequest.getData(`http://localhost:8000/images/${offset}/${k}`);\n      return data.map(image => Image.format(image));\n    } catch (e) {\n      throw e;\n    }\n  }\n\n}","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/helper/image/ImageService.ts"],"names":["HttpRequest","Image","ImageService","getImagesFromCategory","id","data","getData","map","image","format","e","getKImagesFromOffset","k","offset"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAC9B,QAAMC,qBAAN,CAA4BC,EAA5B,EAA0D;AACtD,QAAI;AACA,YAAMC,IAAS,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAqB,yCAAwCF,EAAG,EAAhE,CAAxB;AACA,aAAOC,IAAI,CAACE,GAAL,CAAUC,KAAD,IAAgBP,KAAK,CAACQ,MAAN,CAAaD,KAAb,CAAzB,CAAP;AAEH,KAJD,CAIE,OAAOE,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ;;AAED,QAAMC,oBAAN,CAA2BC,CAA3B,EAAsCC,MAAtC,EAA+D;AAC3D,QAAI;AACA,YAAMR,IAAS,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAqB,gCAA+BO,MAAO,IAAGD,CAAE,EAAhE,CAAxB;AACA,aAAOP,IAAI,CAACE,GAAL,CAAUC,KAAD,IAAgBP,KAAK,CAACQ,MAAN,CAAaD,KAAb,CAAzB,CAAP;AAEH,KAJD,CAIE,OAAOE,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ;;AAnB6B","sourcesContent":["import HttpRequest from '../http/HttpRequest';\r\nimport Category from '../category/Category';\r\nimport Image from './Image';\r\n\r\nexport default class ImageService {\r\n    async getImagesFromCategory(id: string): Promise<Image[]> {\r\n        try {\r\n            const data: any = await HttpRequest.getData(`http://localhost:8000/images/category/${id}`);    \r\n            return data.map((image: any) => Image.format(image));\r\n            \r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    async getKImagesFromOffset(k: number, offset: number): Image[] {\r\n        try {\r\n            const data: any = await HttpRequest.getData(`http://localhost:8000/images/${offset}/${k}`);         \r\n            return data.map((image: any) => Image.format(image));\r\n\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}