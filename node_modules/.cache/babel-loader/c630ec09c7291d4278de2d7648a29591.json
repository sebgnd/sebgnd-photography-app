{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\reusable\\\\form\\\\text-field\\\\TextField.tsx\";\n// Style\nimport { StyledInput } from './text-input-style';\nimport { StyledTextArea } from './text-area-style';\nimport { Margin, MarginTop, Block, MarginLeft } from '../../regular/style'; // Date / Logic\n\nimport React, { Component } from 'react';\nconst TYPES = ['text-input', 'text-area'];\n\nclass TextField extends Component {\n  getFieldType() {\n    if (TYPES.includes(this.props.type)) {\n      return this.props.type;\n    }\n\n    return TYPES[0];\n  }\n\n  handleBlur(event) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  }\n\n  handleChange(event) {\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      placeholder,\n      hideContent,\n      error\n    } = this.props;\n    return React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Margin, {\n      amount: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, label && React.createElement(MarginLeft, {\n      amount: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, label)), React.createElement(MarginTop, {\n      amount: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.getFieldType() === TYPES[0] && React.createElement(StyledInput, {\n      name: id,\n      id: id,\n      error: error ? error : false,\n      placeholder: placeholder,\n      type: hideContent ? \"password\" : \"text\",\n      onBlur: e => this.handleBlur(e),\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), this.getFieldType() === TYPES[1] && React.createElement(StyledTextArea, {\n      name: id,\n      id: id,\n      error: error ? error : false,\n      placeholder: placeholder,\n      onBlur: e => this.handleBlur(e),\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default TextField;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/reusable/form/text-field/TextField.tsx"],"names":["StyledInput","StyledTextArea","Margin","MarginTop","Block","MarginLeft","React","Component","TYPES","TextField","getFieldType","includes","props","type","handleBlur","event","onBlur","handleChange","onChange","render","id","label","placeholder","hideContent","error","e"],"mappings":";AAAA;AACA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,UAAnC,QAAqD,qBAArD,C,CAEA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AAEA,MAAMC,KAAe,GAAG,CAAC,YAAD,EAAe,WAAf,CAAxB;;AAkBA,MAAMC,SAAN,SAAwBF,SAAxB,CAAuD;AACnDG,EAAAA,YAAY,GAAG;AACX,QAAIF,KAAK,CAACG,QAAN,CAAe,KAAKC,KAAL,CAAWC,IAA1B,CAAJ,EAAqC;AACjC,aAAO,KAAKD,KAAL,CAAWC,IAAlB;AACH;;AACD,WAAOL,KAAK,CAAC,CAAD,CAAZ;AACH;;AAEDM,EAAAA,UAAU,CAACC,KAAD,EAAwB;AAC9B,QAAI,KAAKH,KAAL,CAAWI,MAAf,EAAuB;AACnB,WAAKJ,KAAL,CAAWI,MAAX,CAAkBD,KAAlB;AACH;AACJ;;AAEDE,EAAAA,YAAY,CAACF,KAAD,EAAwB;AAChC,QAAI,KAAKH,KAAL,CAAWM,QAAf,EAAyB;AACrB,WAAKN,KAAL,CAAWM,QAAX,CAAoBH,KAApB;AACH;AACJ;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA,WAA1B;AAAuCC,MAAAA;AAAvC,QAAiD,KAAKZ,KAA5D;AACA,WACQ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,KAAK,IACF,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAED,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBC,KAArB,CADJ,CAFR,EAMI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,YAAL,OAAwBF,KAAK,CAAC,CAAD,CAA7B,IACG,oBAAC,WAAD;AACI,MAAA,IAAI,EAAEY,EADV;AAEI,MAAA,EAAE,EAAEA,EAFR;AAGI,MAAA,KAAK,EAAEI,KAAK,GAAGA,KAAH,GAAW,KAH3B;AAII,MAAA,WAAW,EAAEF,WAJjB;AAKI,MAAA,IAAI,EAAEC,WAAW,GAAG,UAAH,GAAgB,MALrC;AAMI,MAAA,MAAM,EAAGE,CAAD,IAAoC,KAAKX,UAAL,CAAgBW,CAAhB,CANhD;AAOI,MAAA,QAAQ,EAAGA,CAAD,IAAoC,KAAKR,YAAL,CAAkBQ,CAAlB,CAPlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EAWK,KAAKf,YAAL,OAAwBF,KAAK,CAAC,CAAD,CAA7B,IACG,oBAAC,cAAD;AACI,MAAA,IAAI,EAAEY,EADV;AAEI,MAAA,EAAE,EAAEA,EAFR;AAGI,MAAA,KAAK,EAAEI,KAAK,GAAGA,KAAH,GAAW,KAH3B;AAII,MAAA,WAAW,EAAEF,WAJjB;AAKI,MAAA,MAAM,EAAGG,CAAD,IAAuC,KAAKX,UAAL,CAAgBW,CAAhB,CALnD;AAMI,MAAA,QAAQ,EAAGA,CAAD,IAAuC,KAAKR,YAAL,CAAkBQ,CAAlB,CANrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,CANJ,CADJ,CADR;AAgCH;;AAtDkD;;AAyDvD,eAAehB,SAAf","sourcesContent":["// Style\r\nimport { StyledInput } from './text-input-style';\r\nimport { StyledTextArea } from './text-area-style';\r\nimport { Margin, MarginTop, Block, MarginLeft } from '../../regular/style';\r\n\r\n// Date / Logic\r\nimport React, { Component, FormEvent } from 'react';\r\n\r\nconst TYPES: string[] = ['text-input', 'text-area'];\r\n\r\ntype TextFieldEvent = FormEvent<HTMLInputElement> | FormEvent<HTMLTextAreaElement>\r\n\r\ninterface ITextFieldProps {\r\n    id: string;\r\n    type: string;\r\n    error?: boolean;\r\n    onBlur?(e: TextFieldEvent): void;\r\n    onChange?(e: TextFieldEvent): void;\r\n    label?: string;\r\n    placeholder?: string;\r\n    hideContent?: boolean;\r\n    required?: boolean;\r\n    errorMessage?: string;\r\n    height?: number;\r\n}\r\n\r\nclass TextField extends Component<ITextFieldProps, {}> {\r\n    getFieldType() {\r\n        if (TYPES.includes(this.props.type)) {\r\n            return this.props.type;\r\n        }\r\n        return TYPES[0];\r\n    }\r\n\r\n    handleBlur(event: TextFieldEvent) {\r\n        if (this.props.onBlur) {\r\n            this.props.onBlur(event);\r\n        }\r\n    }\r\n\r\n    handleChange(event: TextFieldEvent) {\r\n        if (this.props.onChange) {\r\n            this.props.onChange(event);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, label, placeholder, hideContent, error } = this.props;\r\n        return (\r\n                <Block>\r\n                    <Margin amount={50}>\r\n                        {label && (\r\n                            <MarginLeft amount={5}>\r\n                                <label htmlFor={id}>{label}</label>\r\n                            </MarginLeft>\r\n                        )}\r\n                        <MarginTop amount={5}>\r\n                            {this.getFieldType() === TYPES[0] && (\r\n                                <StyledInput \r\n                                    name={id} \r\n                                    id={id} \r\n                                    error={error ? error : false} \r\n                                    placeholder={placeholder} \r\n                                    type={hideContent ? \"password\" : \"text\"} \r\n                                    onBlur={(e: FormEvent<HTMLInputElement>) => this.handleBlur(e)} \r\n                                    onChange={(e: FormEvent<HTMLInputElement>) => this.handleChange(e)}/>\r\n                            )}\r\n                            {this.getFieldType() === TYPES[1] && (\r\n                                <StyledTextArea \r\n                                    name={id} \r\n                                    id={id} \r\n                                    error={error ? error : false} \r\n                                    placeholder={placeholder} \r\n                                    onBlur={(e: FormEvent<HTMLTextAreaElement>) => this.handleBlur(e)}\r\n                                    onChange={(e: FormEvent<HTMLTextAreaElement>) => this.handleChange(e)}/>\r\n                            )}\r\n                        </MarginTop>\r\n                    </Margin>\r\n                </Block>\r\n            )\r\n    }\r\n} \r\n\r\nexport default TextField;"]},"metadata":{},"sourceType":"module"}