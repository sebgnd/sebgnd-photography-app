{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Recent\\\\Recent.tsx\";\nimport React, { Component } from 'react';\nimport { Button } from '../../UI/Button';\nimport Image from '../../../helper/Image';\nimport HttpRequest from '../../../helper/HttpRequest';\nconst NB_IMAGE_PER_FETCH = 5;\n\nclass Recent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      error: false,\n      loading: true,\n      canLoad: true,\n      errorMessage: '',\n      nbImagesLoaded: 0\n    };\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  }\n\n  handleFetchError(data) {\n    if (!data) {\n      this.setError('Something unexptected happened. Please try again later.');\n      return true;\n    }\n\n    if (data.error) {\n      this.setError(data.error.message);\n      return true;\n    }\n\n    return false;\n  } // TODO: When fetching new images => set loading to true\n\n\n  async fetchImages(offset) {\n    try {\n      const data = await HttpRequest.getData(`http://localhost:8000/images/${offset}/${NB_IMAGE_PER_FETCH}`);\n      const images = [...this.state.images];\n      const {\n        nbImagesLoaded\n      } = this.state;\n\n      if (!this.handleFetchError(data)) {\n        for (let i = 0; i < data.length; i++) {\n          const image = new Image(data[i].id, data[i].galleryId, new Date(data[i].uploadDate));\n          images.push(image);\n        }\n\n        this.setState({\n          nbImagesLoaded: nbImagesLoaded + data.length,\n          loading: false\n        });\n      }\n    } catch (e) {\n      this.setError('Something unexpected happened. Try again later.');\n    }\n  }\n\n  componentDidMount() {\n    this.fetchImages(0);\n  }\n\n  render() {\n    return React.createElement(Button, {\n      variant: \"classic\",\n      size: \"medium\",\n      onClick: () => this.fetchImages(this.state.nbImagesLoaded),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Load\");\n  }\n\n}\n\nexport default Recent;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Recent/Recent.tsx"],"names":["React","Component","Button","Image","HttpRequest","NB_IMAGE_PER_FETCH","Recent","state","images","error","loading","canLoad","errorMessage","nbImagesLoaded","setError","setState","handleFetchError","data","message","fetchImages","offset","getData","i","length","image","id","galleryId","Date","uploadDate","push","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAWA,MAAMC,kBAA0B,GAAG,CAAnC;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAAgD;AAAA;AAAA;AAAA,SAC5CM,KAD4C,GACpC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,OAAO,EAAE,IAJL;AAKJC,MAAAA,YAAY,EAAE,EALV;AAMJC,MAAAA,cAAc,EAAE;AANZ,KADoC;AAAA;;AAU5CC,EAAAA,QAAQ,CAACF,YAAD,EAAuB;AAC3B,SAAKG,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAd;AACH;;AAEDM,EAAAA,gBAAgB,CAACC,IAAD,EAA4B;AACxC,QAAI,CAACA,IAAL,EAAW;AACP,WAAKH,QAAL,CAAc,yDAAd;AACA,aAAO,IAAP;AACH;;AACD,QAAIG,IAAI,CAACR,KAAT,EAAgB;AACZ,WAAKK,QAAL,CAAcG,IAAI,CAACR,KAAL,CAAWS,OAAzB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAxB2C,CA0B5C;;;AACA,QAAMC,WAAN,CAAkBC,MAAlB,EAAkC;AAC9B,QAAI;AACA,YAAMH,IAAgB,GAAG,MAAMb,WAAW,CAACiB,OAAZ,CAAqB,gCAA+BD,MAAO,IAAGf,kBAAmB,EAAjF,CAA/B;AACA,YAAMG,MAAe,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAxB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAqB,KAAKN,KAAhC;;AAEA,UAAI,CAAC,KAAKS,gBAAL,CAAsBC,IAAtB,CAAL,EAAkC;AAC9B,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,gBAAME,KAAY,GAAG,IAAIrB,KAAJ,CAAUc,IAAI,CAACK,CAAD,CAAJ,CAAQG,EAAlB,EAAsBR,IAAI,CAACK,CAAD,CAAJ,CAAQI,SAA9B,EAAyC,IAAIC,IAAJ,CAASV,IAAI,CAACK,CAAD,CAAJ,CAAQM,UAAjB,CAAzC,CAArB;AACApB,UAAAA,MAAM,CAACqB,IAAP,CAAYL,KAAZ;AACH;;AACD,aAAKT,QAAL,CAAc;AAAEF,UAAAA,cAAc,EAAEA,cAAc,GAAGI,IAAI,CAACM,MAAxC;AAAgDb,UAAAA,OAAO,EAAE;AAAzD,SAAd;AACH;AACJ,KAZD,CAYE,OAAOoB,CAAP,EAAU;AACR,WAAKhB,QAAL,CAAc,iDAAd;AACH;AACJ;;AAEDiB,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,WAAL,CAAiB,CAAjB;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,OAAO,EAAE,MAAM,KAAKb,WAAL,CAAiB,KAAKZ,KAAL,CAAWM,cAA5B,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AArD2C;;AAwDhD,eAAeP,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from '../../UI/Button';\r\n\r\nimport Image from '../../../helper/Image';\r\nimport HttpRequest from '../../../helper/HttpRequest';\r\n\r\ninterface RecentState {\r\n    images: Image[];\r\n    error: boolean;\r\n    loading: boolean;\r\n    errorMessage: string;\r\n    nbImagesLoaded: number;\r\n    canLoad: boolean;\r\n}\r\n\r\nconst NB_IMAGE_PER_FETCH: number = 5;\r\n\r\nclass Recent extends Component<{}, RecentState> {\r\n    state = {\r\n        images: [],\r\n        error: false,\r\n        loading: true,\r\n        canLoad: true,\r\n        errorMessage: '',\r\n        nbImagesLoaded: 0,\r\n    }\r\n\r\n    setError(errorMessage: string) {\r\n        this.setState({ error: true, loading: false });\r\n    }\r\n\r\n    handleFetchError(data: any | null): boolean {\r\n        if (!data) {\r\n            this.setError('Something unexptected happened. Please try again later.');\r\n            return true;\r\n        }\r\n        if (data.error) {\r\n            this.setError(data.error.message);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // TODO: When fetching new images => set loading to true\r\n    async fetchImages(offset: number) {\r\n        try {\r\n            const data: any | null = await HttpRequest.getData(`http://localhost:8000/images/${offset}/${NB_IMAGE_PER_FETCH}`);\r\n            const images: Image[] = [...this.state.images];\r\n            const { nbImagesLoaded } = this.state;\r\n\r\n            if (!this.handleFetchError(data)) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const image: Image = new Image(data[i].id, data[i].galleryId, new Date(data[i].uploadDate));\r\n                    images.push(image);\r\n                }\r\n                this.setState({ nbImagesLoaded: nbImagesLoaded + data.length, loading: false });\r\n            }\r\n        } catch (e) {\r\n            this.setError('Something unexpected happened. Try again later.');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchImages(0);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button variant=\"classic\" size=\"medium\" onClick={() => this.fetchImages(this.state.nbImagesLoaded)}>Load</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recent;"]},"metadata":{},"sourceType":"module"}