{"ast":null,"code":"import AbstractGallery from './AbstractGallery';\nimport Category from '../Category';\nimport Image from '../image/Image';\nexport default class Gallery extends AbstractGallery {\n  constructor(category, images = []) {\n    super(category);\n    this._images = void 0;\n    this._images = images;\n  }\n\n  get images() {\n    return this._images;\n  }\n\n  get id() {\n    return this.category.id;\n  }\n\n  static format(json) {\n    // TODO: Implement checking json format => throw wrong format error\n    const {\n      id,\n      displayName\n    } = json;\n    const category = new Category(id, displayName);\n    const images = json.images.map(image => new Image(image.id, new Date(image.uploadDate)));\n    return new Gallery(category, images);\n  }\n\n  add(image) {\n    this._images.push(image);\n  }\n\n  delete(imgId) {\n    this._images = this._images.filter(image => image.id !== imgId);\n  }\n\n}","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/helper/gallery/Gallery.ts"],"names":["AbstractGallery","Category","Image","Gallery","constructor","category","images","_images","id","format","json","displayName","map","image","Date","uploadDate","add","push","delete","imgId","filter"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,eAAtB,CAAsC;AAGjDI,EAAAA,WAAW,CAACC,QAAD,EAAqBC,MAAe,GAAG,EAAvC,EAA2C;AAClD,UAAMD,QAAN;AADkD,SAF9CE,OAE8C;AAElD,SAAKA,OAAL,GAAeD,MAAf;AACH;;AAED,MAAIA,MAAJ,GAAsB;AAClB,WAAO,KAAKC,OAAZ;AACH;;AAED,MAAIC,EAAJ,GAAiB;AACb,WAAO,KAAKH,QAAL,CAAcG,EAArB;AACH;;AAED,SAAOC,MAAP,CAAcC,IAAd,EAAkC;AAC9B;AACA,UAAM;AAAEF,MAAAA,EAAF;AAAMG,MAAAA;AAAN,QAAsBD,IAA5B;AACA,UAAML,QAAQ,GAAG,IAAIJ,QAAJ,CAAaO,EAAb,EAAiBG,WAAjB,CAAjB;AACA,UAAML,MAAM,GAAGI,IAAI,CAACJ,MAAL,CAAYM,GAAZ,CAAiBC,KAAD,IAAgB,IAAIX,KAAJ,CAAUW,KAAK,CAACL,EAAhB,EAAoB,IAAIM,IAAJ,CAASD,KAAK,CAACE,UAAf,CAApB,CAAhC,CAAf;AACA,WAAO,IAAIZ,OAAJ,CAAYE,QAAZ,EAAsBC,MAAtB,CAAP;AACH;;AAEDU,EAAAA,GAAG,CAACH,KAAD,EAAe;AACd,SAAKN,OAAL,CAAaU,IAAb,CAAkBJ,KAAlB;AACH;;AAEDK,EAAAA,MAAM,CAACC,KAAD,EAAgB;AAClB,SAAKZ,OAAL,GAAe,KAAKA,OAAL,CAAaa,MAAb,CAAqBP,KAAD,IAAkBA,KAAK,CAACL,EAAN,KAAaW,KAAnD,CAAf;AACH;;AA9BgD","sourcesContent":["import AbstractGallery from './AbstractGallery';\r\nimport Category from '../Category';\r\nimport Image from '../image/Image';\r\n\r\nexport default class Gallery extends AbstractGallery {\r\n    private _images: Image[];\r\n\r\n    constructor(category: Category, images: Image[] = []) {\r\n        super(category);\r\n        this._images = images;\r\n    }\r\n\r\n    get images(): Image[] {\r\n        return this._images;\r\n    }\r\n\r\n    get id(): string {\r\n        return this.category.id;\r\n    }\r\n\r\n    static format(json: any): Gallery {\r\n        // TODO: Implement checking json format => throw wrong format error\r\n        const { id, displayName } = json;\r\n        const category = new Category(id, displayName);\r\n        const images = json.images.map((image: any) => new Image(image.id, new Date(image.uploadDate)));\r\n        return new Gallery(category, images);\r\n    }\r\n\r\n    add(image: Image) {\r\n        this._images.push(image);\r\n    }\r\n\r\n    delete(imgId: number) {\r\n        this._images = this._images.filter((image: Image) => image.id !== imgId);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}