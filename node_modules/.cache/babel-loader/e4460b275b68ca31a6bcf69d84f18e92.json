{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Gallery\\\\SingleGallery.tsx\";\nimport React, { Component } from 'react';\nimport ImageList from '../../ImageList/ImageList';\nimport Image from '../../../helper/image/Image';\nimport Gallery from '../../../helper/gallery/Gallery';\nimport HttpRequest from '../../../helper/http/HttpRequest';\nimport Category from '../../../helper/Category';\n\nclass SingleGallery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gallery: new Category(),\n      images: [],\n      error: false,\n      loading: true\n    };\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  }\n\n  handleFetchError(data) {\n    if (!data) {\n      this.setError('Something unexptected happened. Please try again later.');\n      return true;\n    }\n\n    if (data.error) {\n      this.setError(data.error.message);\n      return true;\n    }\n\n    return false;\n  }\n\n  async fetchGallery(galleryId) {\n    try {\n      const data = await HttpRequest.getData(`http://localhost:8000/images/gallery/${galleryId}`);\n\n      if (!data) {\n        this.setState({\n          error: true,\n          loading: false\n        });\n        return;\n      }\n\n      if (!this.handleFetchError(data)) {\n        const images = data.images.map(image => Image.format(image));\n        const category = new Category(data.id, data.displayName);\n        const gallery = new Gallery(category, images);\n        this.setState({\n          error: false,\n          loading: false,\n          gallery\n        });\n      }\n    } catch (e) {\n      this.setError('Something unexpected happened. Please try again later');\n    }\n  }\n\n  componentDidMount() {\n    this.fetchGallery(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(ImageList, {\n      images: this.state.gallery.images,\n      galleryDisplayName: this.state.gallery.displayName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SingleGallery;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Gallery/SingleGallery.tsx"],"names":["React","Component","ImageList","Image","Gallery","HttpRequest","Category","SingleGallery","state","gallery","images","error","loading","setError","errorMessage","setState","handleFetchError","data","message","fetchGallery","galleryId","getData","map","image","format","category","id","displayName","e","componentDidMount","props","match","params","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAaA,MAAMC,aAAN,SAA4BN,SAA5B,CAA4F;AAAA;AAAA;AAAA,SACxFO,KADwF,GAChF;AACJC,MAAAA,OAAO,EAAE,IAAIH,QAAJ,EADL;AAEJI,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE,KAHH;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADgF;AAAA;;AAQxFC,EAAAA,QAAQ,CAACC,YAAD,EAAuB;AAC3B,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAd;AACH;;AAEDI,EAAAA,gBAAgB,CAACC,IAAD,EAA4B;AACxC,QAAI,CAACA,IAAL,EAAW;AACP,WAAKJ,QAAL,CAAc,yDAAd;AACA,aAAO,IAAP;AACH;;AACD,QAAII,IAAI,CAACN,KAAT,EAAgB;AACZ,WAAKE,QAAL,CAAcI,IAAI,CAACN,KAAL,CAAWO,OAAzB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAED,QAAMC,YAAN,CAAmBC,SAAnB,EAAsC;AAClC,QAAI;AACA,YAAMH,IAAgB,GAAG,MAAMZ,WAAW,CAACgB,OAAZ,CAAqB,wCAAuCD,SAAU,EAAtE,CAA/B;;AACA,UAAI,CAACH,IAAL,EAAW;AACP,aAAKF,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,OAAO,EAAE;AAAxB,SAAd;AACA;AACH;;AAED,UAAI,CAAC,KAAKI,gBAAL,CAAsBC,IAAtB,CAAL,EAAkC;AAC9B,cAAMP,MAAM,GAAGO,IAAI,CAACP,MAAL,CAAYY,GAAZ,CAAiBC,KAAD,IAAgBpB,KAAK,CAACqB,MAAN,CAAaD,KAAb,CAAhC,CAAf;AACA,cAAME,QAAQ,GAAG,IAAInB,QAAJ,CAAaW,IAAI,CAACS,EAAlB,EAAsBT,IAAI,CAACU,WAA3B,CAAjB;AACA,cAAMlB,OAAO,GAAG,IAAIL,OAAJ,CAAYqB,QAAZ,EAAsBf,MAAtB,CAAhB;AACA,aAAKK,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,OAAO,EAAE,KAAzB;AAAgCH,UAAAA;AAAhC,SAAd;AACH;AACJ,KAbD,CAaE,OAAOmB,CAAP,EAAU;AACR,WAAKf,QAAL,CAAc,uDAAd;AACH;AACJ;;AAEDgB,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,YAAL,CAAkB,KAAKW,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBN,EAA1C;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWC,OAAX,CAAmBC,MAAtC;AAA8C,MAAA,kBAAkB,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBkB,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAnDuF;;AAsD5F,eAAepB,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ImageList from '../../ImageList/ImageList';\r\n\r\nimport Image from '../../../helper/image/Image';\r\nimport Gallery from '../../../helper/gallery/Gallery';\r\nimport HttpRequest from '../../../helper/http/HttpRequest';\r\nimport Category from '../../../helper/Category';\r\n\r\ninterface RouteParams {\r\n    id: string;\r\n}\r\n\r\ninterface SingleGalleryState {\r\n    category: Category;\r\n    images: Image[];\r\n    error: boolean,\r\n    loading: boolean\r\n}\r\n\r\nclass SingleGallery extends Component<RouteComponentProps<RouteParams>, SingleGalleryState> {\r\n    state = {  \r\n        gallery: new Category(),\r\n        images: [],\r\n        error: false,\r\n        loading: true\r\n    }\r\n\r\n    setError(errorMessage: string) {\r\n        this.setState({ error: true, loading: false });\r\n    }\r\n\r\n    handleFetchError(data: any | null): boolean {\r\n        if (!data) {\r\n            this.setError('Something unexptected happened. Please try again later.');\r\n            return true;\r\n        }\r\n        if (data.error) {\r\n            this.setError(data.error.message);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async fetchGallery(galleryId: string) {\r\n        try {\r\n            const data: any | null = await HttpRequest.getData(`http://localhost:8000/images/gallery/${galleryId}`);\r\n            if (!data) {\r\n                this.setState({ error: true, loading: false });\r\n                return;\r\n            }\r\n            \r\n            if (!this.handleFetchError(data)) {\r\n                const images = data.images.map((image: any) => Image.format(image));\r\n                const category = new Category(data.id, data.displayName);\r\n                const gallery = new Gallery(category, images);\r\n                this.setState({ error: false, loading: false, gallery });\r\n            }\r\n        } catch (e) {\r\n            this.setError('Something unexpected happened. Please try again later');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchGallery(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ImageList images={this.state.gallery.images} galleryDisplayName={this.state.gallery.displayName}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleGallery;"]},"metadata":{},"sourceType":"module"}