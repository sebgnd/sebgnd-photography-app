{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\reusable\\\\form\\\\form\\\\Form.tsx\";\nimport React, { Component, createContext } from 'react';\nexport const FormContext = createContext(null);\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: new Map(),\n      submitted: false,\n      error: false\n    };\n  }\n\n  getMethod() {\n    const {\n      method\n    } = this.props;\n\n    if (method.toLowerCase() == 'post' || method.toLowerCase() == 'get') {\n      return method.toUpperCase();\n    }\n\n    return 'POST';\n  }\n\n  setValue(key, value) {\n    this.setState({\n      values: new Map(this.state.values).set(key, value)\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state.values);\n  }\n\n  render() {\n    return React.createElement(FormContext.Provider, {\n      value: context,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e),\n      action: this.props.action,\n      method: this.getMethod(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.children, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/reusable/form/form/Form.tsx"],"names":["React","Component","createContext","FormContext","Form","constructor","props","state","values","Map","submitted","error","getMethod","method","toLowerCase","toUpperCase","setValue","key","value","setState","set","handleSubmit","event","preventDefault","console","log","render","context","e","action","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAA2D,OAA3D;AAoBA,OAAO,MAAMC,WAAW,GAAGD,aAAa,CAAM,IAAN,CAAjC;;AAEP,MAAME,IAAN,SAAmBH,SAAnB,CAAmD;AAC/CI,EAAAA,WAAW,CAACC,KAAD,EAAmB;AAC1B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,IAAIC,GAAJ,EADC;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,SAAS,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKP,KAAxB;;AACA,QAAIO,MAAM,CAACC,WAAP,MAAwB,MAAxB,IAAkCD,MAAM,CAACC,WAAP,MAAwB,KAA9D,EAAqE;AACjE,aAAOD,MAAM,CAACE,WAAP,EAAP;AACH;;AACD,WAAO,MAAP;AACH;;AAEDC,EAAAA,QAAQ,CAACC,GAAD,EAAcC,KAAd,EAA6B;AACjC,SAAKC,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAE,IAAIC,GAAJ,CAAwB,KAAKF,KAAL,CAAWC,MAAnC,EAA2CY,GAA3C,CAA+CH,GAA/C,EAAoDC,KAApD;AAAV,KAAd;AACH;;AAEDG,EAAAA,YAAY,CAACC,KAAD,EAAoC;AAC5CA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWC,MAAvB;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAGC,CAAD,IAAmC,KAAKP,YAAL,CAAkBO,CAAlB,CAAnD;AAAyE,MAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWuB,MAA5F;AAAoG,MAAA,MAAM,EAAE,KAAKjB,SAAL,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWwB,QADhB,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CADJ;AAQH;;AApC8C;;AAuCnD,eAAe1B,IAAf","sourcesContent":["import React, { Component, createContext, FormEvent } from 'react';\r\nimport { stringify } from 'querystring';\r\n\r\ntype FormProps = {\r\n    action: string;\r\n    method: string;\r\n    onSubmit(): void;\r\n}\r\n\r\ntype FormState = {\r\n    values: Map<string, string>;\r\n    error: boolean;\r\n    submitted: boolean;\r\n}\r\n\r\nexport interface FormContextType {\r\n    setValue(key: string, value: string): void;\r\n    state: FormState;\r\n}\r\n\r\nexport const FormContext = createContext<any>(null);\r\n\r\nclass Form extends Component<FormProps, FormState> {\r\n    constructor(props: FormProps) {\r\n        super(props);\r\n        this.state = {\r\n            values: new Map<string, string>(),\r\n            submitted: false,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    getMethod() {\r\n        const { method } = this.props;\r\n        if (method.toLowerCase() == 'post' || method.toLowerCase() == 'get') {\r\n            return method.toUpperCase();\r\n        }\r\n        return 'POST';\r\n    }\r\n\r\n    setValue(key: string, value: string) {\r\n        this.setState({ values: new Map<string, string>(this.state.values).set(key, value) });\r\n    }\r\n\r\n    handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        console.log(this.state.values)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormContext.Provider value={context}>\r\n                <form onSubmit={(e: FormEvent<HTMLFormElement>) => this.handleSubmit(e)} action={this.props.action} method={this.getMethod()}>\r\n                    {this.props.children}\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </FormContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}