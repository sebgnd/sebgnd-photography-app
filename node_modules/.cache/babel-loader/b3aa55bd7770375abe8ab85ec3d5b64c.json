{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\parallax\\\\Parallax.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { ParallaxContainer } from './parallax.style';\n\nconst Parallax = props => {\n  const {\n    img,\n    speed\n  } = props;\n  const parallaxElemRef = useRef(null);\n\n  const isElementVisible = () => {\n    if (parallaxElemRef && parallaxElemRef.current) {\n      const position = parallaxElemRef.current.getBoundingClientRect();\n\n      if (position.top < window.innerHeight && position.bottom >= 0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const handleScroll = () => {\n    if (isElementVisible()) {\n      var _parallaxElemRef$curr;\n\n      const yOffset = window.screenY;\n      const topElementYOffset = (_parallaxElemRef$curr = parallaxElemRef.current) === null || _parallaxElemRef$curr === void 0 ? void 0 : _parallaxElemRef$curr.offsetTop;\n      const newOffsetY = (yOffset - topElementYOffset) * speed;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return React.createElement(ParallaxContainer, {\n    ref: parallaxElemRef,\n    backgroundImage: img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};\n\nexport default Parallax;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/parallax/Parallax.tsx"],"names":["React","useEffect","useRef","ParallaxContainer","Parallax","props","img","speed","parallaxElemRef","isElementVisible","current","position","getBoundingClientRect","top","window","innerHeight","bottom","handleScroll","yOffset","screenY","topElementYOffset","offsetTop","newOffsetY","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAOA,MAAMC,QAAyC,GAAIC,KAAD,IAAW;AACzD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAiBF,KAAvB;AACA,QAAMG,eAAe,GAAGN,MAAM,CAAiB,IAAjB,CAA9B;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC3B,QAAID,eAAe,IAAIA,eAAe,CAACE,OAAvC,EAAgD;AAC5C,YAAMC,QAAiB,GAAGH,eAAe,CAACE,OAAhB,CAAwBE,qBAAxB,EAA1B;;AACA,UAAID,QAAQ,CAACE,GAAT,GAAeC,MAAM,CAACC,WAAtB,IAAqCJ,QAAQ,CAACK,MAAT,IAAmB,CAA5D,EAA+D;AAC3D,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GARD;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIR,gBAAgB,EAApB,EAAwB;AAAA;;AACpB,YAAMS,OAAO,GAAGJ,MAAM,CAACK,OAAvB;AACA,YAAMC,iBAAiB,4BAAGZ,eAAe,CAACE,OAAnB,0DAAG,sBAAyBW,SAAnD;AACA,YAAMC,UAAU,GAAG,CAACJ,OAAO,GAAGE,iBAAX,IAAiCb,KAApD;AACH;AACJ,GAND;;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AACA,WAAO,MAAM;AACTH,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCP,YAArC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,SACI,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAET,eAAxB;AAAyC,IAAA,eAAe,EAAEF,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAhCD;;AAkCA,eAAeF,QAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useRef } from 'react';\r\nimport { ParallaxContainer } from './parallax.style';\r\n\r\ninterface ParallaxProp {\r\n    img: string;\r\n    speed: number;\r\n}\r\n\r\nconst Parallax: FunctionComponent<ParallaxProp> = (props) => {\r\n    const { img, speed } = props;\r\n    const parallaxElemRef = useRef<HTMLDivElement>(null);\r\n\r\n    const isElementVisible = () => {\r\n        if (parallaxElemRef && parallaxElemRef.current) {\r\n            const position: DOMRect = parallaxElemRef.current.getBoundingClientRect();\r\n            if (position.top < window.innerHeight && position.bottom >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleScroll = () => {\r\n        if (isElementVisible()) {\r\n            const yOffset = window.screenY;\r\n            const topElementYOffset = parallaxElemRef.current?.offsetTop;\r\n            const newOffsetY = (yOffset - topElementYOffset!) * speed;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <ParallaxContainer ref={parallaxElemRef} backgroundImage={img} />\r\n    )\r\n}\r\n\r\nexport default Parallax;"]},"metadata":{},"sourceType":"module"}