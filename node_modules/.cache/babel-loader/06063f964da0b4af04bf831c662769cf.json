{"ast":null,"code":"import Paths from './Paths';\n\nconst sizeOf = require('image-size');\n\nexport default class Image {\n  // Exif data\n  // Height and width of the image in px\n  //private width: number;\n  //private height: number;\n  constructor(id, galleryId, uploadDate) {\n    this.id = void 0;\n    this.galleryId = void 0;\n    this.aperture = null;\n    this.iso = null;\n    this.shutterSpeed = null;\n    this.focalLength = null;\n    this.uploadDate = void 0;\n    this.id = id;\n    this.uploadDate = uploadDate;\n    this.galleryId = galleryId;\n    this.setSize();\n  }\n\n  setSize() {\n    const size = sizeOf(Paths.fullImage(this.id, this.galleryId));\n    console.log(size);\n  }\n\n  setAperture(aperture) {\n    this.aperture = aperture;\n  }\n\n  setISO(iso) {\n    this.iso = iso;\n  }\n\n  setShutterSpeed(shutterSpeed) {\n    this.shutterSpeed = shutterSpeed;\n  }\n\n  setFocalLength(focalLength) {\n    this.focalLength = focalLength;\n  }\n\n  isPortrait() {\n    return true;\n  }\n\n  isLandscape() {\n    return true;\n  }\n\n  hasExif() {\n    return this.aperture !== null && this.iso !== null && this.shutterSpeed !== null && this.focalLength !== null;\n  }\n\n  toExifString() {\n    if (this.hasExif()) {\n      var _this$iso;\n\n      return `ISO: ${(_this$iso = this.iso) === null || _this$iso === void 0 ? void 0 : _this$iso.toString()}, ${this.shutterSpeed}, ${this.aperture}, ${this.focalLength}`;\n    }\n\n    return 'No information';\n  }\n\n  getFormatedDate() {\n    return this.uploadDate.toLocaleDateString('en-us', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }\n\n  getId() {\n    return this.id;\n  }\n\n}","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/helper/Image.ts"],"names":["Paths","sizeOf","require","Image","constructor","id","galleryId","uploadDate","aperture","iso","shutterSpeed","focalLength","setSize","size","fullImage","console","log","setAperture","setISO","setShutterSpeed","setFocalLength","isPortrait","isLandscape","hasExif","toExifString","toString","getFormatedDate","toLocaleDateString","year","month","day","getId"],"mappings":"AACA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AAEA,eAAe,MAAMC,KAAN,CAAY;AAIvB;AAOA;AACA;AACA;AAEAC,EAAAA,WAAW,CAACC,EAAD,EAAaC,SAAb,EAAgCC,UAAhC,EAAkD;AAAA,SAdrDF,EAcqD;AAAA,SAbrDC,SAaqD;AAAA,SAVrDE,QAUqD,GAV3B,IAU2B;AAAA,SATrDC,GASqD,GAThC,IASgC;AAAA,SARrDC,YAQqD,GARvB,IAQuB;AAAA,SAPrDC,WAOqD,GAPxB,IAOwB;AAAA,SANrDJ,UAMqD;AACzD,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKE,UAAL,GAAkBA,UAAlB;AACA,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKM,OAAL;AACH;;AAEOA,EAAAA,OAAR,GAAkB;AACd,UAAMC,IAAI,GAAGZ,MAAM,CAACD,KAAK,CAACc,SAAN,CAAgB,KAAKT,EAArB,EAAyB,KAAKC,SAA9B,CAAD,CAAnB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;;AAEDI,EAAAA,WAAW,CAACT,QAAD,EAAmB;AAC1B,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAEDU,EAAAA,MAAM,CAACT,GAAD,EAAc;AAChB,SAAKA,GAAL,GAAWA,GAAX;AACH;;AAEDU,EAAAA,eAAe,CAACT,YAAD,EAAuB;AAClC,SAAKA,YAAL,GAAoBA,YAApB;AACH;;AAEDU,EAAAA,cAAc,CAACT,WAAD,EAAsB;AAChC,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAEDU,EAAAA,UAAU,GAAG;AACT,WAAO,IAAP;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,WAAO,IAAP;AACH;;AAEDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKf,QAAL,KAAkB,IAAlB,IACA,KAAKC,GAAL,KAAa,IADb,IAEA,KAAKC,YAAL,KAAsB,IAFtB,IAGA,KAAKC,WAAL,KAAqB,IAH5B;AAIH;;AAEDa,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKD,OAAL,EAAJ,EAAoB;AAAA;;AAChB,aAAQ,QAAD,aAAQ,KAAKd,GAAb,8CAAQ,UAAUgB,QAAV,EAAqB,KAAI,KAAKf,YAAa,KAAI,KAAKF,QAAS,KAAI,KAAKG,WAAY,EAAjG;AACH;;AACD,WAAO,gBAAP;AACH;;AAEDe,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKnB,UAAL,CAAgBoB,kBAAhB,CAAmC,OAAnC,EAA4C;AAC/CC,MAAAA,IAAI,EAAE,SADyC;AAE/CC,MAAAA,KAAK,EAAE,MAFwC;AAG/CC,MAAAA,GAAG,EAAE;AAH0C,KAA5C,CAAP;AAKH;;AAEDC,EAAAA,KAAK,GAAG;AACJ,WAAO,KAAK1B,EAAZ;AACH;;AA3EsB","sourcesContent":["import Gallery from './Gallery';\r\nimport Paths from './Paths';\r\n\r\nconst sizeOf = require('image-size');\r\n\r\nexport default class Image {\r\n    private id: number;\r\n    private galleryId: string;\r\n    \r\n    // Exif data\r\n    private aperture: string | null = null;\r\n    private iso: number | null = null;\r\n    private shutterSpeed: string | null = null;\r\n    private focalLength: string | null = null;\r\n    private uploadDate: Date;\r\n\r\n    // Height and width of the image in px\r\n    //private width: number;\r\n    //private height: number;\r\n\r\n    constructor(id: number, galleryId: string, uploadDate: Date) {\r\n        this.id = id;\r\n        this.uploadDate = uploadDate;\r\n        this.galleryId = galleryId;\r\n        this.setSize();\r\n    }\r\n\r\n    private setSize() {\r\n        const size = sizeOf(Paths.fullImage(this.id, this.galleryId));\r\n        console.log(size);\r\n    }\r\n\r\n    setAperture(aperture: string) {\r\n        this.aperture = aperture;\r\n    }\r\n\r\n    setISO(iso: number) {\r\n        this.iso = iso;\r\n    }\r\n\r\n    setShutterSpeed(shutterSpeed: string) {\r\n        this.shutterSpeed = shutterSpeed;\r\n    }\r\n\r\n    setFocalLength(focalLength: string) {\r\n        this.focalLength = focalLength;\r\n    } \r\n\r\n    isPortrait() {\r\n        return true;\r\n    }\r\n\r\n    isLandscape() {\r\n        return true;\r\n    }\r\n\r\n    hasExif() {\r\n        return this.aperture !== null \r\n            && this.iso !== null \r\n            && this.shutterSpeed !== null \r\n            && this.focalLength !== null;\r\n    }\r\n\r\n    toExifString() {\r\n        if (this.hasExif()) {\r\n            return `ISO: ${this.iso?.toString()}, ${this.shutterSpeed}, ${this.aperture}, ${this.focalLength}`;\r\n        }\r\n        return 'No information'\r\n    }\r\n\r\n    getFormatedDate() {\r\n        return this.uploadDate.toLocaleDateString('en-us', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n        });\r\n    }\r\n\r\n    getId() {\r\n        return this.id;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}