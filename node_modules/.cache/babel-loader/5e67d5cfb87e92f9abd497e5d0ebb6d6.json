{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\UI\\\\Image\\\\RecentImage\\\\RecentImage.tsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AdaptedImage from './AdaptedImage';\nimport { Text } from '../../../Styled/text';\nimport { ButtonContainerWidthWidth } from '../../../Styled/container';\nimport { Button } from '../../Button';\nimport styles from './RecentImage.module.css';\n\nconst RecentImage = ({\n  image,\n  history\n}) => {\n  const goToGallery = id => {\n    history.push(`gallery/${id}`);\n  };\n\n  const goToImage = (id, fromCategory) => {\n    history.push(`viewer/${fromCategory}/${id.toString()}`);\n  };\n\n  const formattedDate = image.getFormatedDate();\n  const imageType = image.isPortrait() ? 'portrait' : 'landscape';\n  const imageSource = image.getUrl('small_res');\n  return React.createElement(\"div\", {\n    className: styles.recentImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.infoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.galleryName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"light\",\n    size: \"small\",\n    onClick: () => goToGallery(image.category.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, image.category.displayName))), React.createElement(\"div\", {\n    className: styles.infoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Text, {\n    size: \"small\",\n    color: \"#7E7E7E\",\n    weight: \"bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, formattedDate)))), React.createElement(\"div\", {\n    className: styles.imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ButtonContainerWidthWidth, {\n    width: \"100%\",\n    onClick: () => goToImage(image.id, image.category.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, image.isPortrait() && React.createElement(\"img\", {\n    className: styles.fillerImage,\n    src: imageSource,\n    alt: image.id.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(AdaptedImage, {\n    type: imageType,\n    src: imageSource,\n    alt: image.id.toString(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(RecentImage);","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/UI/Image/RecentImage/RecentImage.tsx"],"names":["React","withRouter","AdaptedImage","Text","ButtonContainerWidthWidth","Button","styles","RecentImage","image","history","goToGallery","id","push","goToImage","fromCategory","toString","formattedDate","getFormatedDate","imageType","isPortrait","imageSource","getUrl","recentImageContainer","info","infoContainer","galleryName","category","displayName","date","imageContainer","fillerImage"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport Paths from '../../../../helper/Paths';\r\nimport Image from '../../../../helper/image/Image';\r\n\r\nimport AdaptedImage from './AdaptedImage';\r\nimport { Text } from '../../../Styled/text';\r\nimport { ButtonContainerWidthWidth } from '../../../Styled/container';\r\nimport { Button } from '../../Button';\r\n\r\nimport styles from './RecentImage.module.css';\r\nimport Category from '../../../../helper/category/Category';\r\n\r\ninterface RecentImageProp extends RouteComponentProps {\r\n    image: Image;\r\n}\r\n\r\nconst RecentImage: FunctionComponent<RecentImageProp> = ({ image, history }) => {\r\n    const goToGallery = (id: string) => {\r\n        history.push(`gallery/${id}`);\r\n    }\r\n\r\n    const goToImage = (id: number, fromCategory: string) => {\r\n        history.push(`viewer/${fromCategory}/${id.toString()}`);\r\n    }\r\n\r\n    const formattedDate: string = image.getFormatedDate();\r\n    const imageType: string = image.isPortrait() ? 'portrait' : 'landscape';\r\n    const imageSource: string = image.getUrl('small_res');\r\n    \r\n    return (\r\n        <div className={styles.recentImageContainer}>\r\n            <div className={styles.info}>\r\n                <div className={styles.infoContainer}>\r\n                    <div className={styles.galleryName}>\r\n                        <Button variant=\"light\" size=\"small\" onClick={() => goToGallery(image.category.id)}>{image.category.displayName}</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.infoContainer}>\r\n                    <div className={styles.date}>\r\n                        <Text size=\"small\" color=\"#7E7E7E\" weight=\"bold\">{formattedDate}</Text>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className={styles.imageContainer}>\r\n                <ButtonContainerWidthWidth width=\"100%\" onClick={() => goToImage(image.id, image.category.id)}>\r\n                    { image.isPortrait() && (\r\n                        <img className={styles.fillerImage} src={imageSource} alt={image.id.toString()} />\r\n                    )}\r\n                    <AdaptedImage type={imageType} src={imageSource} alt={image.id.toString()} />\r\n                </ButtonContainerWidthWidth>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RecentImage);"]},"metadata":{},"sourceType":"module"}