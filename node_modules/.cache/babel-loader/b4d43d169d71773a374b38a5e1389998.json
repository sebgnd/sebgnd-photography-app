{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\Parallax\\\\Parallax.tsx\";\nimport React, { Component } from 'react';\nimport { ParallaxContainer } from './parallax.style';\n\nclass Parallax extends Component {\n  constructor(props) {\n    super(props);\n    this.parallaxElemRef = void 0;\n    this.throttleTime = void 0;\n    this.topOffset = void 0;\n    this.height = void 0;\n    this.topOffset = 0;\n    this.parallaxElemRef = React.createRef();\n    this.throttleTime = 5;\n    this.height = 0;\n    this.handleResize = this.handleResize.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      backgroundPositionY: '',\n      backgroundSize: 'cover'\n    };\n  }\n\n  isElementVisible() {\n    if (this.parallaxElemRef && this.parallaxElemRef.current) {\n      const position = this.parallaxElemRef.current.getBoundingClientRect();\n\n      if (position.top < window.innerHeight && position.bottom >= 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  updateBackgroundSize() {\n    const elementHeight = this.parallaxElemRef.current.scrollHeight;\n\n    if (elementHeight > window.innerHeight) {\n      this.setState({\n        backgroundSize: `auto ${elementHeight}px`\n      });\n    } else {\n      this.setState({\n        backgroundSize: 'cover'\n      });\n    }\n  }\n\n  updatePosition() {\n    if (!this.isElementVisible()) {\n      return;\n    }\n\n    const newTop = this.getNewTop();\n    this.setState({\n      backgroundPositionY: `${newTop}px`\n    });\n  }\n\n  getTopOffset() {\n    return window.innerHeight * this.props.speed;\n  }\n\n  getNewTop() {\n    const bottomPageOffset = window.scrollY + window.innerHeight;\n    const intoElementOffset = bottomPageOffset - this.parallaxElemRef.current.offsetTop;\n    const newTop = this.topOffset - intoElementOffset * this.props.speed;\n    return newTop;\n  }\n\n  handleScroll() {\n    this.updatePosition();\n  }\n\n  handleResize() {\n    this.topOffset = this.getTopOffset();\n    this.updateBackgroundSize();\n    this.updatePosition();\n  }\n\n  addEventListener() {\n    window.addEventListener('scroll', this.handleScroll);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  removeEventListener() {\n    window.removeEventListener('scroll', this.handleScroll);\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  componentDidMount() {\n    this.topOffset = this.getTopOffset();\n    this.height = this.parallaxElemRef.current.clientHeight;\n\n    if (this.height > window.innerHeight) {\n      this.parallaxElemRef.current.style.backgroundSize = `auto ${this.height}`;\n    }\n\n    this.parallaxElemRef.current.style.backgroundPositionY = `${this.getNewTop()}px`;\n    this.addEventListener();\n  }\n\n  componentWillUnmount() {\n    this.removeEventListener();\n  }\n\n  render() {\n    const {\n      img\n    } = this.props;\n    return React.createElement(ParallaxContainer, {\n      ref: this.parallaxElemRef,\n      style: { ...this.state\n      },\n      backgroundImage: img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default Parallax;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/Parallax/Parallax.tsx"],"names":["React","Component","ParallaxContainer","Parallax","constructor","props","parallaxElemRef","throttleTime","topOffset","height","createRef","handleResize","bind","handleScroll","state","backgroundPositionY","backgroundSize","isElementVisible","current","position","getBoundingClientRect","top","window","innerHeight","bottom","updateBackgroundSize","elementHeight","scrollHeight","setState","updatePosition","newTop","getNewTop","getTopOffset","speed","bottomPageOffset","scrollY","intoElementOffset","offsetTop","addEventListener","removeEventListener","componentDidMount","clientHeight","style","componentWillUnmount","render","img","children"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useRef, useState, RefObject } from 'react';\r\nimport { ParallaxContainer, Relative } from './parallax.style';\r\nimport { throttle } from 'lodash';\r\n\r\nimport ParallaxContent from './ParallaxContent';\r\n\r\ninterface ParallaxProp {\r\n    img: string;\r\n    speed: number;\r\n}\r\n\r\ninterface ParallaxState {\r\n    backgroundPositionY: string;\r\n    backgroundSize: string;\r\n}\r\n\r\nclass Parallax extends Component<ParallaxProp, ParallaxState> {\r\n    private parallaxElemRef: RefObject<HTMLDivElement>;\r\n    private throttleTime: number;\r\n    private topOffset: number;\r\n    private height: number;\r\n\r\n    constructor(props: ParallaxProp) {\r\n        super(props);\r\n\r\n        this.topOffset = 0;\r\n        this.parallaxElemRef = React.createRef();\r\n        this.throttleTime = 5;\r\n        this.height = 0;\r\n\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n\r\n        this.state = {\r\n            backgroundPositionY: '',\r\n            backgroundSize: 'cover'\r\n        }\r\n    }\r\n\r\n    isElementVisible() {\r\n        if (this.parallaxElemRef && this.parallaxElemRef.current) {\r\n            const position: DOMRect = this.parallaxElemRef.current.getBoundingClientRect();\r\n            if (position.top < window.innerHeight && position.bottom >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateBackgroundSize() {\r\n        const elementHeight = this.parallaxElemRef.current!.scrollHeight;\r\n\r\n        if (elementHeight > window.innerHeight) {\r\n            this.setState({ backgroundSize: `auto ${elementHeight}px` });\r\n        } else {\r\n            this.setState({ backgroundSize: 'cover' });\r\n        }\r\n    }\r\n\r\n    updatePosition() {\r\n        if (!this.isElementVisible()) {\r\n            return;\r\n        }\r\n        const newTop = this.getNewTop();\r\n        this.setState({ backgroundPositionY: `${newTop}px` });\r\n    }\r\n\r\n    getTopOffset() {\r\n        return window.innerHeight * this.props.speed;\r\n    }\r\n\r\n    getNewTop() {\r\n        const bottomPageOffset = window.scrollY + window.innerHeight;\r\n        const intoElementOffset = bottomPageOffset - this.parallaxElemRef.current!.offsetTop;\r\n        const newTop = this.topOffset - intoElementOffset * this.props.speed;\r\n        return newTop;\r\n    }\r\n\r\n    handleScroll() {\r\n        this.updatePosition();\r\n    }\r\n\r\n    handleResize() {\r\n        this.topOffset = this.getTopOffset();\r\n        this.updateBackgroundSize();\r\n        this.updatePosition();\r\n    }\r\n\r\n    addEventListener() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    removeEventListener() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.topOffset = this.getTopOffset();\r\n        this.height = this.parallaxElemRef.current!.clientHeight;\r\n\r\n        if (this.height > window.innerHeight) {\r\n            this.parallaxElemRef.current!.style.backgroundSize = `auto ${this.height}`;\r\n        }\r\n        this.parallaxElemRef.current!.style.backgroundPositionY = `${this.getNewTop()}px`;\r\n        \r\n        this.addEventListener();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeEventListener();\r\n    }\r\n\r\n    render() {\r\n        const { img } = this.props;\r\n        return (\r\n            <ParallaxContainer ref={this.parallaxElemRef} style={{...this.state}} backgroundImage={img}>\r\n                {this.props.children}\r\n            </ParallaxContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Parallax;"]},"metadata":{},"sourceType":"module"}