{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Recent\\\\Recent.tsx\";\nimport React, { Component } from 'react';\nimport Image from '../../../helper/Image';\nimport HttpRequest from '../../../helper/HttpRequest';\nconst NB_IMAGE_PER_FETCH = 5;\n\nclass Recent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      error: false,\n      loading: true,\n      errorMessage: '',\n      nbImagesLoaded: 0\n    };\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  }\n\n  handleFetchError(data) {\n    if (!data) {\n      this.setError('Something unexptected happened. Please try again later.');\n      return true;\n    }\n\n    if (data.error) {\n      this.setError(data.error.message);\n      return true;\n    }\n\n    return false;\n  }\n\n  fetchImages(offset) {\n    try {\n      const data = HttpRequest.getData(`http://localhost:8000/images/${offset}/${NB_IMAGE_PER_FETCH}`);\n      const images = [...this.state.images];\n\n      if (!this.handleFetchError(data)) {\n        for (let i = 0; i < data.length; i++) {\n          const image = new Image(data[i].id, data[i].galleryId, new Date(data[i].uploadDate));\n          images.push(image);\n        }\n\n        console.log(this.state.images);\n        this.setState({\n          nbImagesLoaded: data.length\n        }); //this.setState({ images });\n      }\n    } catch (e) {\n      this.setError('Something unexpected happened. Try again later.');\n    }\n  }\n\n  componentDidMount() {\n    this.fetchImages(0);\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Recent\");\n  }\n\n}\n\nexport default Recent;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Recent/Recent.tsx"],"names":["React","Component","Image","HttpRequest","NB_IMAGE_PER_FETCH","Recent","state","images","error","loading","errorMessage","nbImagesLoaded","setError","setState","handleFetchError","data","message","fetchImages","offset","getData","i","length","image","id","galleryId","Date","uploadDate","push","console","log","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAUA,MAAMC,kBAA0B,GAAG,CAAnC;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAAgD;AAAA;AAAA;AAAA,SAC5CK,KAD4C,GACpC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,YAAY,EAAE,EAJV;AAKJC,MAAAA,cAAc,EAAE;AALZ,KADoC;AAAA;;AAS5CC,EAAAA,QAAQ,CAACF,YAAD,EAAuB;AAC3B,SAAKG,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAd;AACH;;AAEDK,EAAAA,gBAAgB,CAACC,IAAD,EAA4B;AACxC,QAAI,CAACA,IAAL,EAAW;AACP,WAAKH,QAAL,CAAc,yDAAd;AACA,aAAO,IAAP;AACH;;AACD,QAAIG,IAAI,CAACP,KAAT,EAAgB;AACZ,WAAKI,QAAL,CAAcG,IAAI,CAACP,KAAL,CAAWQ,OAAzB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAiB;AACxB,QAAI;AACA,YAAMH,IAAgB,GAAGZ,WAAW,CAACgB,OAAZ,CAAqB,gCAA+BD,MAAO,IAAGd,kBAAmB,EAAjF,CAAzB;AACA,YAAMG,MAAe,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAxB;;AAEA,UAAI,CAAC,KAAKO,gBAAL,CAAsBC,IAAtB,CAAL,EAAkC;AAC9B,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,gBAAME,KAAY,GAAG,IAAIpB,KAAJ,CAAUa,IAAI,CAACK,CAAD,CAAJ,CAAQG,EAAlB,EAAsBR,IAAI,CAACK,CAAD,CAAJ,CAAQI,SAA9B,EAAyC,IAAIC,IAAJ,CAASV,IAAI,CAACK,CAAD,CAAJ,CAAQM,UAAjB,CAAzC,CAArB;AACAnB,UAAAA,MAAM,CAACoB,IAAP,CAAYL,KAAZ;AACH;;AACDM,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWC,MAAvB;AACA,aAAKM,QAAL,CAAc;AAAEF,UAAAA,cAAc,EAAEI,IAAI,CAACM;AAAvB,SAAd,EAN8B,CAO9B;AACH;AACJ,KAbD,CAaE,OAAOS,CAAP,EAAU;AACR,WAAKlB,QAAL,CAAc,iDAAd;AACH;AACJ;;AAEDmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,WAAL,CAAiB,CAAjB;AACH;;AAEDe,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;;AApD2C;;AAuDhD,eAAe3B,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from '../../UI/Button';\r\n\r\nimport Image from '../../../helper/Image';\r\nimport HttpRequest from '../../../helper/HttpRequest';\r\n\r\ninterface RecentState {\r\n    images: Image[];\r\n    error: boolean;\r\n    loading: boolean;\r\n    errorMessage: string;\r\n    nbImagesLoaded: number;\r\n}\r\n\r\nconst NB_IMAGE_PER_FETCH: number = 5;\r\n\r\nclass Recent extends Component<{}, RecentState> {\r\n    state = {\r\n        images: [],\r\n        error: false,\r\n        loading: true,\r\n        errorMessage: '',\r\n        nbImagesLoaded: 0,\r\n    }\r\n\r\n    setError(errorMessage: string) {\r\n        this.setState({ error: true, loading: false });\r\n    }\r\n\r\n    handleFetchError(data: any | null): boolean {\r\n        if (!data) {\r\n            this.setError('Something unexptected happened. Please try again later.');\r\n            return true;\r\n        }\r\n        if (data.error) {\r\n            this.setError(data.error.message);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    fetchImages(offset: number) {\r\n        try {\r\n            const data: any | null = HttpRequest.getData(`http://localhost:8000/images/${offset}/${NB_IMAGE_PER_FETCH}`);\r\n            const images: Image[] = [...this.state.images];\r\n\r\n            if (!this.handleFetchError(data)) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const image: Image = new Image(data[i].id, data[i].galleryId, new Date(data[i].uploadDate));\r\n                    images.push(image);\r\n                }\r\n                console.log(this.state.images);\r\n                this.setState({ nbImagesLoaded: data.length });\r\n                //this.setState({ images });\r\n            }\r\n        } catch (e) {\r\n            this.setError('Something unexpected happened. Try again later.');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchImages(0);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>Recent</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recent;"]},"metadata":{},"sourceType":"module"}