{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Gallery\\\\SingleGallery.tsx\";\nimport React, { Component } from 'react';\nimport ImageList from '../../ImageList/ImageList';\nimport Image from '../../../helper/Image';\nimport Gallery from '../../../helper/Gallery';\nconst placeHolderImage = new Image(1, 'test', new Date());\nconst placeholderGallery = new Gallery('test', 'Test', placeHolderImage);\n\nclass SingleGallery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gallery: new Gallery(),\n      error: false,\n      loadingGallery: true,\n      loadingImages: true\n    };\n  }\n\n  fetchData(galleryId) {\n    this.fetchGallery(galleryId);\n    this.fetchGalleryImages(galleryId);\n  }\n\n  async getData(url) {\n    const result = await fetch(url);\n    const data = result.ok ? await result.json() : null;\n    return data;\n  }\n\n  async fetchGallery(galleryId) {\n    const data = this.getData(`http://localhost:8000/galleries/${galleryId}`);\n\n    if (!data) {\n      this.setState({\n        error: true,\n        loadingGallery: false\n      });\n      return;\n    }\n\n    const thumbnail = new Image(data.thumbnail.id, data.thumbnail.galleryId, new Date(data.thumbnail.uploadDate));\n    const gallery = new Gallery(data.id, data.displayName, thumbnail);\n    this.setState({\n      error: false,\n      loadingGallery: false,\n      gallery\n    });\n  }\n\n  async fetchGalleryImages(id) {\n    const data = this.getData(`http://localhost:8000/images/gallery/${id}`);\n\n    if (!data) {\n      this.setState({\n        error: true,\n        loadingGallery: false\n      });\n      return;\n    }\n\n    const gallery = this.state.gallery.clone();\n\n    for (let i = 0; i < data.length; i++) {\n      gallery.addImage(new Image(data[i].id, data[i].galleryId, new Date(data[i].uploadDate), data[i].isThumbnail));\n    }\n\n    this.setState({\n      gallery\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(ImageList, {\n      images: this.state.gallery.getImages(),\n      galleryDisplayName: this.state.gallery.getDisplayName(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SingleGallery;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Gallery/SingleGallery.tsx"],"names":["React","Component","ImageList","Image","Gallery","placeHolderImage","Date","placeholderGallery","SingleGallery","state","gallery","error","loadingGallery","loadingImages","fetchData","galleryId","fetchGallery","fetchGalleryImages","getData","url","result","fetch","data","ok","json","setState","thumbnail","id","uploadDate","displayName","clone","i","length","addImage","isThumbnail","componentDidMount","props","match","params","render","getImages","getDisplayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ImageList from '../../ImageList/ImageList';\r\n\r\nimport Image from '../../../helper/Image';\r\nimport Gallery from '../../../helper/Gallery';\r\n\r\nconst placeHolderImage = new Image(1, 'test', new Date());\r\nconst placeholderGallery = new Gallery('test', 'Test', placeHolderImage);\r\n\r\ninterface RouteParams {\r\n    id: string;\r\n}\r\n\r\ninterface SingleGalleryState {\r\n    gallery: Gallery;\r\n    error: boolean,\r\n    loadingGallery: boolean;\r\n    loadingImages: boolean;\r\n}\r\n\r\nclass SingleGallery extends Component<RouteComponentProps<RouteParams>, SingleGalleryState> {\r\n    state = {  \r\n        gallery: new Gallery(),\r\n        error: false,\r\n        loadingGallery: true,\r\n        loadingImages: true\r\n    }\r\n\r\n    fetchData(galleryId: string) {\r\n        this.fetchGallery(galleryId);\r\n        this.fetchGalleryImages(galleryId);\r\n    }\r\n\r\n    async getData(url: string) {\r\n        const result: Response = await fetch(url);\r\n        const data: any | null = result.ok ? await result.json() : null;\r\n        return data;\r\n    }\r\n\r\n    async fetchGallery(galleryId: string) {\r\n        const data: any | null = this.getData(`http://localhost:8000/galleries/${galleryId}`);\r\n\r\n        if (!data) {\r\n            this.setState({ error: true, loadingGallery: false });\r\n            return;\r\n        }\r\n\r\n        const thumbnail = new Image(data.thumbnail.id, data.thumbnail.galleryId, new Date(data.thumbnail.uploadDate));\r\n        const gallery = new Gallery(data.id, data.displayName, thumbnail);\r\n        this.setState({ error: false, loadingGallery: false, gallery })\r\n    }\r\n\r\n    async fetchGalleryImages(id: string) {\r\n        const data: any | null = this.getData(`http://localhost:8000/images/gallery/${id}`);\r\n\r\n        if (!data) {\r\n            this.setState({ error: true, loadingGallery: false });\r\n            return;\r\n        }\r\n        \r\n        const gallery: Gallery = this.state.gallery.clone();\r\n        for (let i = 0; i < data.length; i++) {\r\n            gallery.addImage(new Image(data[i].id, data[i].galleryId, new Date(data[i].uploadDate), data[i].isThumbnail));\r\n        }\r\n        this.setState({ gallery });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ImageList images={this.state.gallery.getImages()} galleryDisplayName={this.state.gallery.getDisplayName()}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleGallery;"]},"metadata":{},"sourceType":"module"}