{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\reusable\\\\info-display\\\\InfoDisplay.tsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Text } from '../regular/text';\nimport { Absolute, AbsoluteWithWidth } from '../regular/positionning';\nimport { Info } from './info-display';\nconst POSITIONS = ['bottom-right', 'top-right', 'bottom-left', 'top-left'];\n\nclass InfoDisplay extends Component {\n  getPosition() {\n    let {\n      position\n    } = this.props;\n\n    if (POSITIONS.includes(position)) {\n      return position;\n    }\n\n    return POSITIONS[0];\n  }\n\n  hasWidth() {\n    const {\n      maxWidth,\n      minWidth\n    } = this.props;\n\n    if (maxWidth && minWidth) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      maxWidth,\n      minWidth\n    } = this.props;\n    const positions = this.getPosition().split('-');\n    const top = positions[0] === 'top' ? -25 : undefined;\n    const bottom = positions[0] === 'bottom' ? -25 : undefined;\n    const left = positions[1] === 'left' ? -25 : undefined;\n    const right = positions[1] === 'right' ? -25 : undefined;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, !this.hasWidth() ? React.createElement(Absolute, {\n      id: id,\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Text, {\n      size: \"medium\",\n      color: \"black\",\n      weight: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.info))) : React.createElement(AbsoluteWithWidth, {\n      id: id,\n      top: top,\n      bottom: bottom,\n      left: left,\n      right: right,\n      min: minWidth,\n      max: maxWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Text, {\n      size: \"medium\",\n      color: \"black\",\n      weight: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.info))));\n  }\n\n}\n\nexport default InfoDisplay;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/reusable/info-display/InfoDisplay.tsx"],"names":["React","Component","Fragment","Text","Absolute","AbsoluteWithWidth","Info","POSITIONS","InfoDisplay","getPosition","position","props","includes","hasWidth","maxWidth","minWidth","render","positions","split","top","undefined","bottom","left","right","id","info"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Text } from '../regular/text';\r\nimport { Absolute, AbsoluteWithWidth } from '../regular/positionning';\r\nimport { Info } from './info-display';\r\n\r\ninterface IInfoDisplayProps {\r\n    info: string;\r\n    position: string;\r\n    maxWidth?: number;\r\n    minWidth?: number;\r\n    id?: string;\r\n}\r\n\r\nconst POSITIONS: string[] = ['bottom-right', 'top-right', 'bottom-left', 'top-left'];\r\n\r\nclass InfoDisplay extends Component<IInfoDisplayProps, {}> {\r\n    getPosition(): string {\r\n        let { position } = this.props;\r\n        if (POSITIONS.includes(position)) {\r\n            return position;\r\n        }\r\n        return POSITIONS[0];\r\n    }\r\n\r\n    hasWidth(): boolean {\r\n        const { maxWidth, minWidth } = this.props;\r\n        if (maxWidth && minWidth) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { maxWidth, minWidth } = this.props;\r\n        const positions = this.getPosition().split('-');\r\n        const top = positions[0] === 'top' ? -25 : undefined;\r\n        const bottom = positions[0] === 'bottom' ? -25 : undefined;\r\n        const left = positions[1] === 'left' ? -25 : undefined;\r\n        const right = positions[1] === 'right' ? -25 : undefined;\r\n\r\n        return (\r\n            <Fragment>\r\n                { !this.hasWidth() ? (\r\n                    <Absolute id={id} top={top} bottom={bottom} left={left} right={right}>\r\n                        <Info>\r\n                            <Text size=\"medium\" color=\"black\" weight=\"normal\">{this.props.info}</Text>\r\n                        </Info>\r\n                    </Absolute>\r\n                ) : (\r\n                    <AbsoluteWithWidth id={id}  top={top} bottom={bottom} left={left} right={right} min={minWidth!} max={maxWidth!}>\r\n                        <Info>\r\n                            <Text size=\"medium\" color=\"black\" weight=\"normal\">{this.props.info}</Text>\r\n                        </Info>\r\n                    </AbsoluteWithWidth>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoDisplay;"]},"metadata":{},"sourceType":"module"}