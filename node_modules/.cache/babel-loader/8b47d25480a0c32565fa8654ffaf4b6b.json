{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\reusable\\\\form\\\\input\\\\Input.tsx\";\nimport React, { Component } from 'react';\nimport { StyledInput } from './input-style';\nimport { Margin, MarginTop, Block, MarginLeft } from '../../regular/style';\n\nclass Input extends Component {\n  getType() {\n    return this.props.hideContent ? 'password' : 'text';\n  }\n\n  handleChange(event) {\n    context.setValue(this.props.id, event.currentTarget.value);\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      placeholder,\n      value\n    } = this.props;\n    const error = false;\n    return React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Margin, {\n      amount: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, label && React.createElement(MarginLeft, {\n      amount: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, label)), React.createElement(MarginTop, {\n      amount: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(StyledInput, {\n      id: id,\n      error: error,\n      placeholder: placeholder,\n      type: this.getType(),\n      value: value,\n      onChange: e => this.handleChange(e, context),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/reusable/form/input/Input.tsx"],"names":["React","Component","StyledInput","Margin","MarginTop","Block","MarginLeft","Input","getType","props","hideContent","handleChange","event","context","setValue","id","currentTarget","value","render","label","placeholder","error","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,UAAnC,QAAqD,qBAArD;;AAcA,MAAMC,KAAN,SAAoBN,SAApB,CAA8C;AAC1CO,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKC,KAAL,CAAWC,WAAX,GAAyB,UAAzB,GAAsC,MAA7C;AACH;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAqC;AAC7CC,IAAAA,OAAO,CAACC,QAAR,CAAiB,KAAKL,KAAL,CAAWM,EAA5B,EAAgCH,KAAK,CAACI,aAAN,CAAoBC,KAApD;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA,EAAF;AAAMI,MAAAA,KAAN;AAAaC,MAAAA,WAAb;AAA0BH,MAAAA;AAA1B,QAAoC,KAAKR,KAA/C;AACA,UAAMY,KAAK,GAAG,KAAd;AACA,WACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KAAK,IACF,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAEJ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBI,KAArB,CADJ,CAFR,EAMI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAEJ,EAAjB;AAAqB,MAAA,KAAK,EAAEM,KAA5B;AAAmC,MAAA,WAAW,EAAED,WAAhD;AAA6D,MAAA,IAAI,EAAE,KAAKZ,OAAL,EAAnE;AAAmF,MAAA,KAAK,EAAES,KAA1F;AAAiG,MAAA,QAAQ,EAAGK,CAAD,IAAoC,KAAKX,YAAL,CAAkBW,CAAlB,EAAqBT,OAArB,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADJ,CADJ;AAcH;;AA1ByC;;AA6B9C,eAAeN,KAAf","sourcesContent":["import React, { Component, FormEvent } from 'react';\r\nimport { StyledInput } from './input-style';\r\nimport { Margin, MarginTop, Block, MarginLeft } from '../../regular/style';\r\nimport { FormContext, FormContextType } from '../form/Form';\r\n\r\ntype InputProps = {\r\n    id: string;\r\n    onChange(event: FormEvent<HTMLInputElement>): void;\r\n    label?: string;\r\n    value?: string;\r\n    placeholder?: string;\r\n    errorMessage?: string;\r\n    hideContent?: boolean;\r\n    required?: boolean;\r\n}\r\n\r\nclass Input extends Component<InputProps, {}> {\r\n    getType() {\r\n        return this.props.hideContent ? 'password' : 'text';\r\n    }\r\n\r\n    handleChange(event: FormEvent<HTMLInputElement>) {\r\n        context.setValue(this.props.id, event.currentTarget.value);\r\n    }\r\n\r\n    render() {\r\n        const { id, label, placeholder, value } = this.props;\r\n        const error = false;\r\n        return (\r\n            <Block>\r\n                <Margin amount={10}>\r\n                    {label && (\r\n                        <MarginLeft amount={5}>\r\n                            <label htmlFor={id}>{label}</label>\r\n                        </MarginLeft>\r\n                    )}\r\n                    <MarginTop amount={5}>\r\n                        <StyledInput id={id} error={error} placeholder={placeholder} type={this.getType()} value={value} onChange={(e: FormEvent<HTMLInputElement>) => this.handleChange(e, context)}/>\r\n                    </MarginTop>\r\n                </Margin>\r\n            </Block>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}