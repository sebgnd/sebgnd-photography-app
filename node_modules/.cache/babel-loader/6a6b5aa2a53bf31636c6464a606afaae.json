{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\reusable\\\\form\\\\text-field\\\\Field.tsx\";\n// Style\nimport { StyledInput } from './text-input-style';\nimport { StyledTextArea } from './text-area-style';\nimport { Margin, MarginTop, Block, MarginLeft } from '../../regular/style'; // Date / Logic\n\nimport React, { Component } from 'react';\nimport { FormContext } from '../form/Form';\nexport const TYPES = ['textinput', 'textarea'];\n\nclass TextField extends Component {\n  getTextType() {\n    return this.props.hideContent ? 'password' : 'text';\n  }\n\n  getFieldType() {\n    return TYPES.includes(this.props.type) ? this.props.type : TYPES[0];\n  }\n\n  handleChange(event, context) {\n    const {\n      id\n    } = this.props;\n    const value = event.currentTarget.value;\n    context === null || context === void 0 ? void 0 : context.setValue(id, value);\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      placeholder\n    } = this.props;\n    const error = false;\n    const type = this.getFieldType();\n    return React.createElement(FormContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, context => React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Margin, {\n      amount: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, label && React.createElement(MarginLeft, {\n      amount: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, label)), React.createElement(MarginTop, {\n      amount: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, type === TYPES[0] && React.createElement(StyledInput, {\n      id: id,\n      error: error,\n      placeholder: placeholder,\n      type: this.getTextType(),\n      onChange: e => this.handleChange(e, context),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), type === TYPES[1] && React.createElement(StyledTextArea, {\n      id: id,\n      error: error,\n      placeholder: placeholder,\n      onChange: e => this.handleChange(e, context),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TextField;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/reusable/form/text-field/Field.tsx"],"names":["StyledInput","StyledTextArea","Margin","MarginTop","Block","MarginLeft","React","Component","FormContext","TYPES","TextField","getTextType","props","hideContent","getFieldType","includes","type","handleChange","event","context","id","value","currentTarget","setValue","render","label","placeholder","error","e"],"mappings":";AAAA;AACA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,UAAnC,QAAqD,qBAArD,C,CAEA;;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,SAAuBC,WAAvB,QAA0C,cAA1C;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,UAAd,CAAd;;AAcP,MAAMC,SAAN,SAAwBH,SAAxB,CAAsD;AAClDI,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKC,KAAL,CAAWC,WAAX,GAAyB,UAAzB,GAAsC,MAA7C;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,WAAOL,KAAK,CAACM,QAAN,CAAe,KAAKH,KAAL,CAAWI,IAA1B,IAAkC,KAAKJ,KAAL,CAAWI,IAA7C,GAAoDP,KAAK,CAAC,CAAD,CAAhE;AACH;;AAEDQ,EAAAA,YAAY,CAACC,KAAD,EAA0BC,OAA1B,EAAkD;AAC1D,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKR,KAApB;AACA,UAAMS,KAAK,GAAGH,KAAK,CAACI,aAAN,CAAoBD,KAAlC;AACAF,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,QAAT,CAAkBH,EAAlB,EAAsBC,KAAtB;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEJ,MAAAA,EAAF;AAAMK,MAAAA,KAAN;AAAaC,MAAAA;AAAb,QAA6B,KAAKd,KAAxC;AACA,UAAMe,KAAK,GAAG,KAAd;AACA,UAAMX,IAAI,GAAG,KAAKF,YAAL,EAAb;AAEA,WACI,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMK,OAAD,IACG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,KAAK,IACF,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAEL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBK,KAArB,CADJ,CAFR,EAMI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,KAAKP,KAAK,CAAC,CAAD,CAAd,IACG,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAEW,EAAjB;AAAqB,MAAA,KAAK,EAAEO,KAA5B;AAAmC,MAAA,WAAW,EAAED,WAAhD;AAA6D,MAAA,IAAI,EAAE,KAAKf,WAAL,EAAnE;AAAuF,MAAA,QAAQ,EAAGiB,CAAD,IAAoC,KAAKX,YAAL,CAAkBW,CAAlB,EAAqBT,OAArB,CAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EAIKH,IAAI,KAAKP,KAAK,CAAC,CAAD,CAAd,IACG,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAEW,EAApB;AAAwB,MAAA,KAAK,EAAEO,KAA/B;AAAsC,MAAA,WAAW,EAAED,WAAnD;AAAgE,MAAA,QAAQ,EAAGE,CAAD,IAAuC,KAAKX,YAAL,CAAkBW,CAAlB,EAAqBT,OAArB,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR,CANJ,CADJ,CAFR,CADJ;AAuBH;;AA3CiD;;AA8CtD,eAAeT,SAAf","sourcesContent":["// Style\r\nimport { StyledInput } from './text-input-style';\r\nimport { StyledTextArea } from './text-area-style';\r\nimport { Margin, MarginTop, Block, MarginLeft } from '../../regular/style';\r\n\r\n// Date / Logic\r\nimport React, { Component, FormEvent } from 'react';\r\nimport { IFormContext, FormContext } from '../form/Form';\r\n\r\nexport const TYPES = ['textinput', 'textarea'];\r\n\r\ninterface ITextFieldProp {\r\n    id: string;\r\n    type: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    errorMessage?: string;\r\n    hideContent?: boolean;\r\n    required?: boolean;\r\n}\r\n\r\ntype GenericFormEvent = FormEvent<HTMLInputElement> | FormEvent<HTMLTextAreaElement>;\r\n\r\nclass TextField extends Component<ITextFieldProp, {}> {\r\n    getTextType() {\r\n        return this.props.hideContent ? 'password' : 'text';\r\n    }\r\n\r\n    getFieldType() {\r\n        return TYPES.includes(this.props.type) ? this.props.type : TYPES[0];\r\n    }\r\n\r\n    handleChange(event: GenericFormEvent, context?: IFormContext) {\r\n        const { id } = this.props;\r\n        const value = event.currentTarget.value;\r\n        context?.setValue(id, value);\r\n    }\r\n\r\n    render() {\r\n        const { id, label, placeholder } = this.props;\r\n        const error = false;\r\n        const type = this.getFieldType();\r\n\r\n        return (\r\n            <FormContext.Consumer>\r\n                {(context?: IFormContext) => (\r\n                    <Block>\r\n                        <Margin amount={10}>\r\n                            {label && (\r\n                                <MarginLeft amount={5}>\r\n                                    <label htmlFor={id}>{label}</label>\r\n                                </MarginLeft>\r\n                            )}\r\n                            <MarginTop amount={5}>\r\n                                {type === TYPES[0] && (\r\n                                    <StyledInput id={id} error={error} placeholder={placeholder} type={this.getTextType()} onChange={(e: FormEvent<HTMLInputElement>) => this.handleChange(e, context)}/>\r\n                                )}\r\n                                {type === TYPES[1] && (\r\n                                    <StyledTextArea id={id} error={error} placeholder={placeholder} onChange={(e: FormEvent<HTMLTextAreaElement>) => this.handleChange(e, context)}/>\r\n                                )}\r\n                            </MarginTop>\r\n                        </Margin>\r\n                    </Block>\r\n                )}\r\n            </FormContext.Consumer>\r\n        )\r\n    }\r\n} \r\n\r\nexport default TextField;"]},"metadata":{},"sourceType":"module"}