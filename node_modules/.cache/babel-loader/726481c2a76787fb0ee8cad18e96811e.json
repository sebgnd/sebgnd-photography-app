{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\reusable\\\\image\\\\RecentImage.tsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Paths from '../../../data/Paths';\nimport { RecentImageContainer, ImgInfoHeader, ImgInfo, ImgDate, ImgCategory } from './recent/recent-style';\nimport './image.css';\n\n// TODO: Change imageType to a enum ImageType, overkill ?\n// TODO: Figure out if image is landscape or portrait\n// TODO: Get the right path for the image from files server -> imageSource\nclass RecentImage extends Component {\n  render() {\n    // Image information\n    const formatedDate = this.props.image.getFormatedDate();\n    const id = this.props.image.getId().toString();\n    const imageType = this.props.image.isPortrait() ? 'portrait' : 'landscape'; // Links to other pages\n\n    const galleryLink = `gallery/${this.props.galleryName}`;\n    const imageLink = `viewer/${this.props.galleryName}/${id}`;\n    const imageSource = Paths.smallImage();\n    return React.createElement(RecentImageContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ImgInfoHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ImgInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ImgCategory, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.galleryDisplayName)), React.createElement(ImgInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ImgDate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, formatedDate))), React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: imageLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.image.isPortrait() && React.createElement(\"img\", {\n      className: `${imageType}-fill`,\n      src: imageSource,\n      alt: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: imageType,\n      src: imageSource,\n      alt: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default RecentImage;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/reusable/image/RecentImage.tsx"],"names":["React","Component","Link","Paths","RecentImageContainer","ImgInfoHeader","ImgInfo","ImgDate","ImgCategory","RecentImage","render","formatedDate","props","image","getFormatedDate","id","getId","toString","imageType","isPortrait","galleryLink","galleryName","imageLink","imageSource","smallImage","galleryDisplayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SACIC,oBADJ,EAEIC,aAFJ,EAGIC,OAHJ,EAIIC,OAJJ,EAKIC,WALJ,QAMO,uBANP;AAQA,OAAO,aAAP;;AAWA;AACA;AACA;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAyD;AACrDS,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,eAAjB,EAArB;AACA,UAAMC,EAAE,GAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,KAAjB,GAAyBC,QAAzB,EAAX;AACA,UAAMC,SAAS,GAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,UAAjB,KAAgC,UAAhC,GAA6C,WAA/D,CAJK,CAML;;AACA,UAAMC,WAAW,GAAI,WAAU,KAAKR,KAAL,CAAWS,WAAY,EAAtD;AACA,UAAMC,SAAS,GAAI,UAAS,KAAKV,KAAL,CAAWS,WAAY,IAAGN,EAAG,EAAzD;AACA,UAAMQ,WAAW,GAAGpB,KAAK,CAACqB,UAAN,EAApB;AAEA,WACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKZ,KAAL,CAAWa,kBAAzB,CADJ,CADJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUd,YAAV,CADJ,CAJJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEW,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKV,KAAL,CAAWC,KAAX,CAAiBM,UAAjB,MACM;AAAK,MAAA,SAAS,EAAG,GAAED,SAAU,OAA7B;AAAqC,MAAA,GAAG,EAAEK,WAA1C;AAAuD,MAAA,GAAG,EAAER,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFZ,EAII;AAAK,MAAA,SAAS,EAAEG,SAAhB;AAA2B,MAAA,GAAG,EAAEK,WAAhC;AAA6C,MAAA,GAAG,EAAER,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CATJ,CADJ;AAoBH;;AAhCoD;;AAmCzD,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Paths from '../../../data/Paths';\r\nimport Image from './../../../data/Image';\r\nimport {\r\n    RecentImageContainer,\r\n    ImgInfoHeader,\r\n    ImgInfo,\r\n    ImgDate,\r\n    ImgCategory\r\n} from './recent/recent-style';\r\n\r\nimport './image.css';\r\n\r\ntype RecentImageProp = {\r\n    // Image information\r\n    image: Image;\r\n\r\n    // Gallery information\r\n    galleryDisplayName: string;\r\n    galleryName: string;\r\n}\r\n\r\n// TODO: Change imageType to a enum ImageType, overkill ?\r\n// TODO: Figure out if image is landscape or portrait\r\n// TODO: Get the right path for the image from files server -> imageSource\r\n\r\nclass RecentImage extends Component<RecentImageProp, {}> {\r\n    render() {\r\n        // Image information\r\n        const formatedDate = this.props.image.getFormatedDate();\r\n        const id = this.props.image.getId().toString();\r\n        const imageType = this.props.image.isPortrait() ? 'portrait' : 'landscape';\r\n        \r\n        // Links to other pages\r\n        const galleryLink = `gallery/${this.props.galleryName}`;\r\n        const imageLink = `viewer/${this.props.galleryName}/${id}`;\r\n        const imageSource = Paths.smallImage();\r\n        \r\n        return (\r\n            <RecentImageContainer>\r\n                <ImgInfoHeader>\r\n                    <ImgInfo>\r\n                        <ImgCategory>{this.props.galleryDisplayName}</ImgCategory>\r\n                    </ImgInfo>\r\n                    <ImgInfo>\r\n                        <ImgDate>{formatedDate}</ImgDate>\r\n                    </ImgInfo>\r\n                </ImgInfoHeader>\r\n                <div className=\"image\">\r\n                    <Link to={imageLink}>\r\n                        { this.props.image.isPortrait() && (\r\n                                <img className={`${imageType}-fill`} src={imageSource} alt={id}></img>\r\n                            )}\r\n                        <img className={imageType} src={imageSource} alt={id}/>\r\n                    </Link>\r\n                </div>\r\n            </RecentImageContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecentImage;"]},"metadata":{},"sourceType":"module"}