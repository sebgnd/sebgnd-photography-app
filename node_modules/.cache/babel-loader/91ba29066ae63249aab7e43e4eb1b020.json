{"ast":null,"code":"import HttpRequest from '../http/HttpRequest';\nimport Image from './Image';\nexport default class ImageService {\n  getImagesFromCategory(id) {\n    try {\n      const data = HttpRequest.getData(`http://localhost:8000/images/category/${id}`);\n      return data.images.map(image => Image.format(image));\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  getKImagesFromOffset(offset, k) {\n    try {\n      const data = HttpRequest.getData(`http://localhost:8000/images/${offset}/${k}`);\n      return data.map(image => Image.format(image));\n    } catch (e) {\n      throw e;\n    }\n  }\n\n}","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/helper/image/ImageService.ts"],"names":["HttpRequest","Image","ImageService","getImagesFromCategory","id","data","getData","images","map","image","format","e","getKImagesFromOffset","offset","k"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAC9BC,EAAAA,qBAAqB,CAACC,EAAD,EAAsB;AACvC,QAAI;AACA,YAAMC,IAAS,GAAGL,WAAW,CAACM,OAAZ,CAAqB,yCAAwCF,EAAG,EAAhE,CAAlB;AACA,aAAOC,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAiBC,KAAD,IAAgBR,KAAK,CAACS,MAAN,CAAaD,KAAb,CAAhC,CAAP;AAEH,KAJD,CAIE,OAAOE,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ;;AAEDC,EAAAA,oBAAoB,CAACC,MAAD,EAAiBC,CAAjB,EAAqC;AACrD,QAAI;AACA,YAAMT,IAAS,GAAGL,WAAW,CAACM,OAAZ,CAAqB,gCAA+BO,MAAO,IAAGC,CAAE,EAAhE,CAAlB;AACA,aAAOT,IAAI,CAACG,GAAL,CAAUC,KAAD,IAAgBR,KAAK,CAACS,MAAN,CAAaD,KAAb,CAAzB,CAAP;AAEH,KAJD,CAIE,OAAOE,CAAP,EAAU;AACR,YAAMA,CAAN;AACH;AACJ;;AAnB6B","sourcesContent":["import HttpRequest from '../http/HttpRequest';\r\nimport Category from '../category/Category';\r\nimport Image from './Image';\r\n\r\nexport default class ImageService {\r\n    getImagesFromCategory(id: string): Image[] {\r\n        try {\r\n            const data: any = HttpRequest.getData(`http://localhost:8000/images/category/${id}`);     \r\n            return data.images.map((image: any) => Image.format(image));\r\n            \r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    getKImagesFromOffset(offset: number, k: number): Image[] {\r\n        try {\r\n            const data: any = HttpRequest.getData(`http://localhost:8000/images/${offset}/${k}`);         \r\n            return data.map((image: any) => Image.format(image));\r\n\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}