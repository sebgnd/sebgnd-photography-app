{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\parallax\\\\Parallax.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { ParallaxContainer } from './parallax.style';\n\nconst Parallax = props => {\n  const {\n    img\n  } = props;\n  const parallaxElemRef = useRef(null);\n\n  const isElementVisible = () => {\n    if (parallaxElemRef && parallaxElemRef.current) {\n      parallaxElemRef.current.focus();\n    }\n  };\n\n  useEffect(() => {}, []);\n  return React.createElement(ParallaxContainer, {\n    ref: parallaxElemRef,\n    backgroundImage: img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n};\n\nexport default Parallax;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/parallax/Parallax.tsx"],"names":["React","useEffect","useRef","ParallaxContainer","Parallax","props","img","parallaxElemRef","isElementVisible","current","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAOA,MAAMC,QAAyC,GAAIC,KAAD,IAAW;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAUD,KAAhB;AACA,QAAME,eAAe,GAAGL,MAAM,CAAC,IAAD,CAA9B;;AAEA,QAAMM,gBAAgB,GAAG,MAAM;AAC3B,QAAID,eAAe,IAAIA,eAAe,CAACE,OAAvC,EAAgD;AAC5CF,MAAAA,eAAe,CAACE,OAAhB,CAAwBC,KAAxB;AACH;AACJ,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAEM,eAAxB;AAAyC,IAAA,eAAe,EAAED,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAjBD;;AAmBA,eAAeF,QAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useRef } from 'react';\r\nimport { ParallaxContainer } from './parallax.style';\r\n\r\ninterface ParallaxProp {\r\n    img: string;\r\n    speed: number;\r\n}\r\n\r\nconst Parallax: FunctionComponent<ParallaxProp> = (props) => {\r\n    const { img } = props;\r\n    const parallaxElemRef = useRef(null);\r\n\r\n    const isElementVisible = () => {\r\n        if (parallaxElemRef && parallaxElemRef.current) {\r\n            parallaxElemRef.current.focus();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <ParallaxContainer ref={parallaxElemRef} backgroundImage={img} />\r\n    )\r\n}\r\n\r\nexport default Parallax;"]},"metadata":{},"sourceType":"module"}