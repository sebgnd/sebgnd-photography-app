{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Galleries\\\\Galleries.tsx\";\nimport React, { Component } from 'react';\nimport GalleriesList from '../../GalleriesList/GalleriesList';\nimport Gallery from '../../../helper/Gallery';\nimport Image from '../../../helper/Image';\nimport HttpRequest from '../../../helper/HttpRequest';\n\nclass Galleries extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      galleries: [],\n      error: false,\n      loading: true,\n      errorMessage: ''\n    };\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  }\n\n  handleFetchError(data) {\n    if (!data) {\n      this.setError('Something unexptected happened. Please try again later.');\n      return true;\n    }\n\n    if (data.error) {\n      this.setError(data.error.message);\n      return true;\n    }\n\n    return false;\n  }\n\n  async fetchGalleries() {\n    try {\n      const data = await HttpRequest.getData('http://localhost:8000/galfleries');\n      const galleries = [];\n      console.log(data);\n\n      if (!this.handleFetchError(data)) {\n        for (let i = 0; i < data.length; i++) {\n          const thumbnail = new Image(data[i].thumbnail.id, data[i].id, new Date(data[i].thumbnail.uploadDate));\n          const gallery = new Gallery(data[i].id, data[i].displayName, thumbnail);\n          galleries.push(gallery);\n        }\n\n        this.setState({\n          loading: false,\n          galleries\n        });\n      }\n    } catch (e) {\n      this.setError('Something unexpected happened. Please try again later.');\n    }\n  }\n\n  componentDidMount() {\n    this.fetchGalleries();\n  }\n\n  render() {\n    return React.createElement(GalleriesList, {\n      galleries: this.state.galleries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Galleries;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Galleries/Galleries.tsx"],"names":["React","Component","GalleriesList","Gallery","Image","HttpRequest","Galleries","state","galleries","error","loading","errorMessage","setError","setState","handleFetchError","data","message","fetchGalleries","getData","console","log","i","length","thumbnail","id","Date","uploadDate","gallery","displayName","push","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AASA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,YAAY,EAAE;AAJV,KADsB;AAAA;;AAQ9BC,EAAAA,QAAQ,CAACD,YAAD,EAAuB;AAC3B,SAAKE,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAd;AACH;;AAEDI,EAAAA,gBAAgB,CAACC,IAAD,EAA4B;AACxC,QAAI,CAACA,IAAL,EAAW;AACP,WAAKH,QAAL,CAAc,yDAAd;AACA,aAAO,IAAP;AACH;;AACD,QAAIG,IAAI,CAACN,KAAT,EAAgB;AACZ,WAAKG,QAAL,CAAcG,IAAI,CAACN,KAAL,CAAWO,OAAzB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAED,QAAMC,cAAN,GAAuB;AACnB,QAAI;AACA,YAAMF,IAAgB,GAAG,MAAMV,WAAW,CAACa,OAAZ,CAAoB,kCAApB,CAA/B;AACA,YAAMV,SAAoB,GAAG,EAA7B;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEA,UAAI,CAAC,KAAKD,gBAAL,CAAsBC,IAAtB,CAAL,EAAkC;AAC9B,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,gBAAME,SAAS,GAAG,IAAInB,KAAJ,CAAUW,IAAI,CAACM,CAAD,CAAJ,CAAQE,SAAR,CAAkBC,EAA5B,EAAgCT,IAAI,CAACM,CAAD,CAAJ,CAAQG,EAAxC,EAA4C,IAAIC,IAAJ,CAASV,IAAI,CAACM,CAAD,CAAJ,CAAQE,SAAR,CAAkBG,UAA3B,CAA5C,CAAlB;AACA,gBAAMC,OAAO,GAAG,IAAIxB,OAAJ,CAAYY,IAAI,CAACM,CAAD,CAAJ,CAAQG,EAApB,EAAwBT,IAAI,CAACM,CAAD,CAAJ,CAAQO,WAAhC,EAA6CL,SAA7C,CAAhB;AACAf,UAAAA,SAAS,CAACqB,IAAV,CAAeF,OAAf;AACH;;AACD,aAAKd,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAE,KAAX;AAAkBF,UAAAA;AAAlB,SAAd;AACH;AACJ,KAbD,CAaE,OAAOsB,CAAP,EAAU;AACR,WAAKlB,QAAL,CAAc,wDAAd;AACH;AACJ;;AAEDmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,cAAL;AACH;;AAEDe,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAnD6B;;AAsDlC,eAAeF,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport GalleriesList from '../../GalleriesList/GalleriesList';\r\n\r\nimport Gallery from '../../../helper/Gallery';\r\nimport Image from '../../../helper/Image';\r\nimport HttpRequest from '../../../helper/HttpRequest';\r\n\r\ninterface GalleriesState {\r\n    galleries: Gallery[];\r\n    error: boolean,\r\n    loading: boolean,\r\n    errorMessage: string\r\n}\r\n\r\nclass Galleries extends Component {\r\n    state = {\r\n        galleries: [],\r\n        error: false,\r\n        loading: true,\r\n        errorMessage: ''\r\n    }\r\n\r\n    setError(errorMessage: string) {\r\n        this.setState({ error: true, loading: false });\r\n    }\r\n\r\n    handleFetchError(data: any | null): boolean {\r\n        if (!data) {\r\n            this.setError('Something unexptected happened. Please try again later.');\r\n            return true;\r\n        }\r\n        if (data.error) {\r\n            this.setError(data.error.message);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async fetchGalleries() {\r\n        try {\r\n            const data: any | null = await HttpRequest.getData('http://localhost:8000/galfleries');\r\n            const galleries: Gallery[] = [];\r\n            console.log(data);\r\n\r\n            if (!this.handleFetchError(data)) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    const thumbnail = new Image(data[i].thumbnail.id, data[i].id, new Date(data[i].thumbnail.uploadDate));\r\n                    const gallery = new Gallery(data[i].id, data[i].displayName, thumbnail);\r\n                    galleries.push(gallery);\r\n                }\r\n                this.setState({ loading: false, galleries });\r\n            }\r\n        } catch (e) {\r\n            this.setError('Something unexpected happened. Please try again later.');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchGalleries();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GalleriesList galleries={this.state.galleries} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Galleries;"]},"metadata":{},"sourceType":"module"}