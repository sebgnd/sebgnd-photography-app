{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Gallery\\\\SingleGallery.tsx\";\nimport React, { Component } from 'react';\nimport ImageList from '../../ImageList/ImageList';\nimport Image from '../../../helper/Image';\nimport Gallery from '../../../helper/Gallery';\nconst placeHolderImage = new Image(1, 'test', new Date());\nconst placeholderGallery = new Gallery('test', 'Test', placeHolderImage);\n\nclass SingleGallery extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gallery: new Gallery(),\n      error: false,\n      loading: true\n    };\n  }\n\n  async fetchGallery(galleryId) {\n    const data = await this.getData(`http://localhost:8000/images/gallery/${galleryId}`);\n\n    if (!data) {\n      this.setState({\n        error: true,\n        loading: false\n      });\n      return;\n    }\n\n    const gallery = new Gallery(data.id, data.displayName);\n\n    for (let i = 0; i < data.images.length; i++) {\n      gallery.addImage(new Image(data.images[i].id, data.images[i].galleryId, new Date(data.images[i].uploadDate)));\n    }\n\n    this.setState({\n      error: false,\n      loading: false,\n      gallery\n    });\n  }\n\n  componentDidMount() {\n    this.fetchGallery(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(ImageList, {\n      images: this.state.gallery.images,\n      galleryDisplayName: this.state.gallery.displayName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SingleGallery;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Gallery/SingleGallery.tsx"],"names":["React","Component","ImageList","Image","Gallery","placeHolderImage","Date","placeholderGallery","SingleGallery","state","gallery","error","loading","fetchGallery","galleryId","data","getData","setState","id","displayName","i","images","length","addImage","uploadDate","componentDidMount","props","match","params","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAGA,MAAMC,gBAAgB,GAAG,IAAIF,KAAJ,CAAU,CAAV,EAAa,MAAb,EAAqB,IAAIG,IAAJ,EAArB,CAAzB;AACA,MAAMC,kBAAkB,GAAG,IAAIH,OAAJ,CAAY,MAAZ,EAAoB,MAApB,EAA4BC,gBAA5B,CAA3B;;AAYA,MAAMG,aAAN,SAA4BP,SAA5B,CAA4F;AAAA;AAAA;AAAA,SACxFQ,KADwF,GAChF;AACJC,MAAAA,OAAO,EAAE,IAAIN,OAAJ,EADL;AAEJO,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADgF;AAAA;;AAOxF,QAAMC,YAAN,CAAmBC,SAAnB,EAAsC;AAClC,UAAMC,IAAgB,GAAG,MAAM,KAAKC,OAAL,CAAc,wCAAuCF,SAAU,EAA/D,CAA/B;;AAEA,QAAI,CAACC,IAAL,EAAW;AACP,WAAKE,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAd;AACA;AACH;;AACD,UAAMF,OAAO,GAAG,IAAIN,OAAJ,CAAYW,IAAI,CAACG,EAAjB,EAAqBH,IAAI,CAACI,WAA1B,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAL,CAAYC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;AACzCV,MAAAA,OAAO,CAACa,QAAR,CAAiB,IAAIpB,KAAJ,CAAUY,IAAI,CAACM,MAAL,CAAYD,CAAZ,EAAeF,EAAzB,EAA6BH,IAAI,CAACM,MAAL,CAAYD,CAAZ,EAAeN,SAA5C,EAAuD,IAAIR,IAAJ,CAASS,IAAI,CAACM,MAAL,CAAYD,CAAZ,EAAeI,UAAxB,CAAvD,CAAjB;AACH;;AACD,SAAKP,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE,KAAzB;AAAgCF,MAAAA;AAAhC,KAAd;AACH;;AAEDe,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,YAAL,CAAkB,KAAKa,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBV,EAA1C;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWC,OAAX,CAAmBW,MAAtC;AAA8C,MAAA,kBAAkB,EAAE,KAAKZ,KAAL,CAAWC,OAAX,CAAmBS,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA7BuF;;AAgC5F,eAAeX,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ImageList from '../../ImageList/ImageList';\r\n\r\nimport Image from '../../../helper/Image';\r\nimport Gallery from '../../../helper/Gallery';\r\nimport HttpRequest from '../../../helper/HttpRequest';\r\n\r\nconst placeHolderImage = new Image(1, 'test', new Date());\r\nconst placeholderGallery = new Gallery('test', 'Test', placeHolderImage);\r\n\r\ninterface RouteParams {\r\n    id: string;\r\n}\r\n\r\ninterface SingleGalleryState {\r\n    gallery: Gallery;\r\n    error: boolean,\r\n    loading: boolean\r\n}\r\n\r\nclass SingleGallery extends Component<RouteComponentProps<RouteParams>, SingleGalleryState> {\r\n    state = {  \r\n        gallery: new Gallery(),\r\n        error: false,\r\n        loading: true\r\n    }\r\n\r\n    async fetchGallery(galleryId: string) {\r\n        const data: any | null = await this.getData(`http://localhost:8000/images/gallery/${galleryId}`);\r\n\r\n        if (!data) {\r\n            this.setState({ error: true, loading: false });\r\n            return;\r\n        }\r\n        const gallery = new Gallery(data.id, data.displayName);\r\n        for (let i = 0; i < data.images.length; i++) {\r\n            gallery.addImage(new Image(data.images[i].id, data.images[i].galleryId, new Date(data.images[i].uploadDate)));\r\n        }\r\n        this.setState({ error: false, loading: false, gallery })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchGallery(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ImageList images={this.state.gallery.images} galleryDisplayName={this.state.gallery.displayName}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleGallery;"]},"metadata":{},"sourceType":"module"}