{"ast":null,"code":"import Category from \"../category/Category\";\nimport Image from \"../image/Image\";\nexport default class Gallery {\n  constructor(category = new Category(), thumbnail = new Image()) {\n    this._category = void 0;\n    this._thumbnail = void 0;\n    this._images = [];\n    this._category = category;\n    this._thumbnail = thumbnail;\n  }\n\n  static format(json) {\n    const category = Category.format(json);\n    const thumbnail = Image.format(json.thumbnail);\n    return new Gallery(category, thumbnail);\n  } // All image in a gallery must have the same category as the gallery\n\n\n  add(image) {\n    if (image.category.id !== this._category.id) {\n      throw new Error('Cannot add an image with a different category to this gallery');\n    }\n\n    this._images.push(image);\n  }\n\n  remove(id) {\n    this._images = this._images.filter(image => image.id !== id);\n  }\n\n  set images(images) {\n    const originalSize = images.length;\n    const filteredSize = images.filter(image => image.category.id !== this._category.id).length;\n\n    if (originalSize === filteredSize) {\n      this._images = images;\n    } else {\n      throw new Error('At least one image is not the same cateogory as the gallery');\n    }\n  }\n\n}","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/helper/gallery/Gallery.ts"],"names":["Category","Image","Gallery","constructor","category","thumbnail","_category","_thumbnail","_images","format","json","add","image","id","Error","push","remove","filter","images","originalSize","length","filteredSize"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,MAAMC,OAAN,CAAc;AAKzBC,EAAAA,WAAW,CAACC,QAAkB,GAAG,IAAIJ,QAAJ,EAAtB,EAAsCK,SAAgB,GAAG,IAAIJ,KAAJ,EAAzD,EAAsE;AAAA,SAJzEK,SAIyE;AAAA,SAHzEC,UAGyE;AAAA,SAFzEC,OAEyE,GAFtD,EAEsD;AAC7E,SAAKF,SAAL,GAAiBF,QAAjB;AACA,SAAKG,UAAL,GAAkBF,SAAlB;AACH;;AAED,SAAOI,MAAP,CAAcC,IAAd,EAAyB;AACrB,UAAMN,QAAQ,GAAGJ,QAAQ,CAACS,MAAT,CAAgBC,IAAhB,CAAjB;AACA,UAAML,SAAS,GAAGJ,KAAK,CAACQ,MAAN,CAAaC,IAAI,CAACL,SAAlB,CAAlB;AACA,WAAO,IAAIH,OAAJ,CAAYE,QAAZ,EAAsBC,SAAtB,CAAP;AACH,GAdwB,CAgBzB;;;AACAM,EAAAA,GAAG,CAACC,KAAD,EAAe;AACd,QAAIA,KAAK,CAACR,QAAN,CAAeS,EAAf,KAAsB,KAAKP,SAAL,CAAeO,EAAzC,EAA6C;AACzC,YAAM,IAAIC,KAAJ,CAAU,+DAAV,CAAN;AACH;;AACD,SAAKN,OAAL,CAAaO,IAAb,CAAkBH,KAAlB;AACH;;AAEDI,EAAAA,MAAM,CAACH,EAAD,EAAa;AACf,SAAKL,OAAL,GAAe,KAAKA,OAAL,CAAaS,MAAb,CAAqBL,KAAD,IAAkBA,KAAK,CAACC,EAAN,KAAaA,EAAnD,CAAf;AACH;;AAED,MAAIK,MAAJ,CAAWA,MAAX,EAA4B;AACxB,UAAMC,YAAY,GAAGD,MAAM,CAACE,MAA5B;AACA,UAAMC,YAAY,GAAGH,MAAM,CAACD,MAAP,CAAeL,KAAD,IAAkBA,KAAK,CAACR,QAAN,CAAeS,EAAf,KAAsB,KAAKP,SAAL,CAAeO,EAArE,EAAyEO,MAA9F;;AACA,QAAID,YAAY,KAAKE,YAArB,EAAmC;AAC/B,WAAKb,OAAL,GAAeU,MAAf;AACH,KAFD,MAEO;AACH,YAAM,IAAIJ,KAAJ,CAAU,6DAAV,CAAN;AACH;AACJ;;AApCwB","sourcesContent":["import Category from \"../category/Category\";\r\nimport Image from \"../image/Image\";\r\n\r\nexport default class Gallery {\r\n    private _category: Category;\r\n    private _thumbnail: Image;\r\n    private _images: Image[] = [];\r\n\r\n    constructor(category: Category = new Category(), thumbnail: Image = new Image()) {\r\n        this._category = category;\r\n        this._thumbnail = thumbnail;\r\n    }\r\n\r\n    static format(json: any) {\r\n        const category = Category.format(json);\r\n        const thumbnail = Image.format(json.thumbnail);\r\n        return new Gallery(category, thumbnail);\r\n    }\r\n\r\n    // All image in a gallery must have the same category as the gallery\r\n    add(image: Image) {\r\n        if (image.category.id !== this._category.id) {\r\n            throw new Error('Cannot add an image with a different category to this gallery');\r\n        }\r\n        this._images.push(image);\r\n    }\r\n\r\n    remove(id: number) {\r\n        this._images = this._images.filter((image: Image) => image.id !== id);\r\n    }\r\n\r\n    set images(images: Image[]) {\r\n        const originalSize = images.length;\r\n        const filteredSize = images.filter((image: Image) => image.category.id !== this._category.id).length;\r\n        if (originalSize === filteredSize) {\r\n            this._images = images;\r\n        } else {\r\n            throw new Error('At least one image is not the same cateogory as the gallery');\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}