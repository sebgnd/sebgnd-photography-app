{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\WEB\\\\sebgnd-photography\\\\front-end\\\\src\\\\components\\\\_containers\\\\Galleries\\\\Galleries.tsx\";\nimport React, { Component } from 'react';\nimport GalleriesList from '../../GalleriesList/GalleriesList';\nimport Image from '../../../helper/image/Image';\nimport HttpRequest from '../../../helper/http/HttpRequest';\nimport Category from '../../../helper/Category';\n\nclass Galleries extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      thumbnails: [],\n      error: false,\n      loading: true,\n      errorMessage: ''\n    };\n  }\n\n  setError(errorMessage) {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  }\n\n  handleFetchError(data) {\n    if (!data) {\n      this.setError('Something unexptected happened. Please try again later.');\n      return true;\n    }\n\n    if (data.error) {\n      this.setError(data.error.message);\n      return true;\n    }\n\n    return false;\n  }\n\n  async fetchGalleries() {\n    try {\n      const data = await HttpRequest.getData('http://localhost:8000/categories');\n\n      if (!this.handleFetchError(data)) {\n        const thumbnails = data.map(category => {\n          const _category = new Category(data.id, data.displayName);\n\n          const image = new Image(data.thumbnail.id, new Date(data.thumbnail.uploadDate), _category);\n          return image;\n        });\n        this.setState({\n          loading: false,\n          thumbnails\n        });\n      }\n    } catch (e) {\n      this.setError('Something unexpected happened. Please try again later.');\n    }\n  }\n\n  componentDidMount() {\n    this.fetchGalleries();\n  }\n\n  render() {\n    return React.createElement(GalleriesList, {\n      thumbnails: this.state.thumbnails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Galleries;","map":{"version":3,"sources":["E:/PROJECT/WEB/sebgnd-photography/front-end/src/components/_containers/Galleries/Galleries.tsx"],"names":["React","Component","GalleriesList","Image","HttpRequest","Category","Galleries","state","thumbnails","error","loading","errorMessage","setError","setState","handleFetchError","data","message","fetchGalleries","getData","map","category","_category","id","displayName","image","thumbnail","Date","uploadDate","e","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AASA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,OAAO,EAAE,IAHL;AAIJC,MAAAA,YAAY,EAAE;AAJV,KADsB;AAAA;;AAQ9BC,EAAAA,QAAQ,CAACD,YAAD,EAAuB;AAC3B,SAAKE,QAAL,CAAc;AAAEJ,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAd;AACH;;AAEDI,EAAAA,gBAAgB,CAACC,IAAD,EAA4B;AACxC,QAAI,CAACA,IAAL,EAAW;AACP,WAAKH,QAAL,CAAc,yDAAd;AACA,aAAO,IAAP;AACH;;AACD,QAAIG,IAAI,CAACN,KAAT,EAAgB;AACZ,WAAKG,QAAL,CAAcG,IAAI,CAACN,KAAL,CAAWO,OAAzB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAED,QAAMC,cAAN,GAAuB;AACnB,QAAI;AACA,YAAMF,IAAgB,GAAG,MAAMX,WAAW,CAACc,OAAZ,CAAoB,kCAApB,CAA/B;;AAEA,UAAI,CAAC,KAAKJ,gBAAL,CAAsBC,IAAtB,CAAL,EAAkC;AAC9B,cAAMP,UAAmB,GAAGO,IAAI,CAACI,GAAL,CAAUC,QAAD,IAAmB;AACpD,gBAAMC,SAAS,GAAG,IAAIhB,QAAJ,CAAaU,IAAI,CAACO,EAAlB,EAAsBP,IAAI,CAACQ,WAA3B,CAAlB;;AACA,gBAAMC,KAAK,GAAG,IAAIrB,KAAJ,CAAUY,IAAI,CAACU,SAAL,CAAeH,EAAzB,EAA6B,IAAII,IAAJ,CAASX,IAAI,CAACU,SAAL,CAAeE,UAAxB,CAA7B,EAAkEN,SAAlE,CAAd;AACA,iBAAOG,KAAP;AACH,SAJ2B,CAA5B;AAKA,aAAKX,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAE,KAAX;AAAkBF,UAAAA;AAAlB,SAAd;AACH;AACJ,KAXD,CAWE,OAAOoB,CAAP,EAAU;AACR,WAAKhB,QAAL,CAAc,wDAAd;AACH;AACJ;;AAEDiB,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,cAAL;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAAKvB,KAAL,CAAWC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAjD6B;;AAoDlC,eAAeF,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport GalleriesList from '../../GalleriesList/GalleriesList';\r\n\r\nimport Image from '../../../helper/image/Image';\r\nimport HttpRequest from '../../../helper/http/HttpRequest';\r\nimport Category from '../../../helper/Category';\r\n\r\ninterface GalleriesState {\r\n    thumbnails: Image[];\r\n    error: boolean,\r\n    loading: boolean,\r\n    errorMessage: string\r\n}\r\n\r\nclass Galleries extends Component {\r\n    state = {\r\n        thumbnails: [],\r\n        error: false,\r\n        loading: true,\r\n        errorMessage: ''\r\n    }\r\n\r\n    setError(errorMessage: string) {\r\n        this.setState({ error: true, loading: false });\r\n    }\r\n\r\n    handleFetchError(data: any | null): boolean {\r\n        if (!data) {\r\n            this.setError('Something unexptected happened. Please try again later.');\r\n            return true;\r\n        }\r\n        if (data.error) {\r\n            this.setError(data.error.message);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async fetchGalleries() {\r\n        try {\r\n            const data: any | null = await HttpRequest.getData('http://localhost:8000/categories');\r\n\r\n            if (!this.handleFetchError(data)) {\r\n                const thumbnails: Image[] = data.map((category: any) => {\r\n                    const _category = new Category(data.id, data.displayName);\r\n                    const image = new Image(data.thumbnail.id, new Date(data.thumbnail.uploadDate), _category);\r\n                    return image;\r\n                });\r\n                this.setState({ loading: false, thumbnails });\r\n            }\r\n        } catch (e) {\r\n            this.setError('Something unexpected happened. Please try again later.');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchGalleries();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GalleriesList thumbnails={this.state.thumbnails} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Galleries;"]},"metadata":{},"sourceType":"module"}